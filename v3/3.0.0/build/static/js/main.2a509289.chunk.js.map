{"version":3,"sources":["blocks/navbar-top/components/navbar-top-left-group.tsx","blocks/navbar-top/components/navbar-top-right-group.tsx","blocks/navbar-top/navbar-top.tsx","utils/sliderReducerHook.tsx","blocks/my-favorite-projects/my-favorite-projects.tsx","blocks/about-me/about-me.tsx","blocks/tools-i-currently-use/tools-i-currently-use.tsx","blocks/tools-i-have-used/tools-i-have-used.tsx","blocks/my-github/my-github.tsx","blocks/home/home.tsx","blocks/alert/alert.tsx","blocks/customer-projects/customer-projects.tsx","blocks/my-projects/my-projects.tsx","blocks/projects/projects.tsx","blocks/footer/footer.tsx","blocks/main/main.tsx","blocks/search-bar-modal/search-bar-modal.tsx","blocks/project-details-modal/project-details-modal.tsx","blocks/modal/modal.tsx","index.js"],"names":["NavbarTopMenu","menuData","stateCurrentPage","useContext","stateCurrentPageContext","setStateCurrentPage","setStateCurrentPageContext","handlePage","page","className","onClick","homeText","projectsText","NavbarTopNightModeButton","NavbarTopNightModeIconContainer","nightModeData","nightModeStatus","stateIndexGroupContext","dispatchIndexGroup","dispatchIndexGroupContext","useEffect","currentHour","Date","getHours","type","newStateValue","lightText","nightText","NavbarTopSearchBarButton","searchBarButtonData","modalName","text","NavbarTopLanguageSelect","languageSelectTextContainer","languageSelectData","useState","selectStatus","setSelectStatus","currentLanguageTag","currentLanguage","currentLanguageData","languages","filter","item","languageTag","status","src","imgSrc","alt","imgAlt","defaultText","selectClickOutside","event","currentTargetClass","target","classList","value","split","document","addEventListener","removeEventListener","map","key","id","NavbarTopLeftGroup","languageDataNavbarTopLeftGroup","mainLogoData","mainLogo","menu","nightMode","searchBarButton","languageSelect","NavbarTopRightGroup","href","rel","NavbarTop","languageDataNavbarTop","useSlider","projectsLength","useReducer","state","action","button","currentNumProject","Error","MyFavoriteProjects","myFavoriteProjectsData","projects","length","dispatch","titleClass","sliderClass","sliderDescriptionClass","sliderButtonBackClass","sliderButtonBackDisabled","sliderButtonNextClass","sliderButtonNextDisabled","currentImageLoaded","setCurrentImageLoaded","title","onLoad","disabled","description","AboutMe","aboutMeData","textClass","ToolsICurrentlyUse","toolsICurrentlyUseData","tools","ToolsIHaveUsed","toolsIHaveUsedData","MyGitHub","myGitHubData","detailsClass","profileImg","repositoriesTotal","gitHubData","setGitHubData","fetch","then","data","json","avatar_url","public_repos","catch","error","repositoriesTitle","Home","languageDataHome","myFavoriteProjects","aboutMe","toolsICurrentlyUse","toolsIHaveUsed","myGitHub","Alert","alertData","linkText","CustomerProjects","customerProjectsData","projectsData","buttonText","MyProjects","myProjectsData","Projects","languageDataProjects","languageDataProjectsData","customerProjects","myProjects","alert","Footer","languageDataFooter","createContext","Main","languageData","currentPage","setCurrentPage","mainClass","currentPageContainer","home","Provider","navbarTop","footer","SearchBarModal","searchBarModalData","searchBarStateValue","setSearchBarStateValue","newSearchBarProjectsList","setNewSearchBarProjectsList","searchBarSubmitStatus","setSearchBarSubmitStatus","searchBarDataChosen","setSearchBarDataChosen","searchBarRef","useRef","inputClass","submitButtonClass","listClass","current","focus","method","placeholder","inputPlaceholder","onChange","searchBarEventValue","searchBarRegex","RegExp","searchBarDataFound","test","name","undefined","ref","maxLength","preventDefault","projectData","ProjectDetailsModal","projectDetailsModalData","projectDetailsData","projectDetailsSliderData","imagesSlider","titleBodyClass","titleItemClass","buttonItemClass","descriptionClass","descriptionTitleClass","titleType","sourceCodeLink","buttonSourceCodeText","websiteLink","buttonWebsiteText","descriptionTitle","Modal","languageDataModal","languageDataProjectData","stateModals","modals","InnerModalContainer","innerClass","closeButtonClass","searchBarModalStatus","searchBarModal","projectDetailsModalStatus","projectDetailsModal","modalCurrentClass","reducerIndexGroup","response","country","console","initialStateIndexGroup","App","indexGroupState","indexGroupDispatch","currentLanguageIndex","languageDataAPI","ModalContainer","querySelector","style","overflow","modal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2a509289.chunk.js","sourcesContent":["import React, {FC, useState, useEffect, useContext} from 'react';\r\nimport {dispatchIndexGroupContext, stateIndexGroupContext} from '../../../index';\r\nimport {stateCurrentPageContext, setStateCurrentPageContext} from '../../main/main';\r\n\r\ninterface NavbarTopMenuProps {\r\n  menuData: {\r\n    homeText: string,\r\n    projectsText: string\r\n  };\r\n}\r\n\r\nconst NavbarTopMenu: FC<NavbarTopMenuProps> = ({\r\n  menuData\r\n}) => {\r\n  const stateCurrentPage = useContext(stateCurrentPageContext);\r\n  const setStateCurrentPage = useContext(setStateCurrentPageContext);\r\n\r\n  function handlePage(page: string) {\r\n    setStateCurrentPage(page);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"navbar-top__menu\">\r\n      <li className={`navbar-top__menu-item${stateCurrentPage === 'home' ? ' navbar-top__menu-item_active' : ''}`}\r\n        onClick={() => handlePage('home')}>{menuData.homeText}</li>\r\n      <li className={`navbar-top__menu-item${stateCurrentPage === 'projects' ? ' navbar-top__menu-item_active' : ''}`}\r\n        onClick={() => handlePage('projects')}>{menuData.projectsText}</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface NavbarTopNightModeButtonProps {\r\n  nightModeData: {\r\n    lightText: string,\r\n    nightText: string\r\n  };\r\n}\r\n\r\nconst NavbarTopNightModeButton: FC<NavbarTopNightModeButtonProps> = ({\r\n  nightModeData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n  let NavbarTopNightModeIconContainer;\r\n\r\n  useEffect(() => {\r\n    const currentHour = new Date().getHours();\r\n\r\n    if(currentHour >= 5 && currentHour <= 17) {\r\n      dispatchIndexGroup({type: 'night-mode', newStateValue: false});\r\n    } else if(currentHour >= 0 && currentHour <= 4) {\r\n      dispatchIndexGroup({type: 'night-mode', newStateValue: true});\r\n    } else if(currentHour >= 18 && currentHour <= 23) {\r\n      dispatchIndexGroup({type: 'night-mode', newStateValue: true});\r\n    } else {\r\n      dispatchIndexGroup({type: 'night-mode', newStateValue: false});\r\n    }\r\n  }, [dispatchIndexGroup])\r\n\r\n  if(nightModeStatus) {\r\n    NavbarTopNightModeIconContainer = <>\r\n      <i className=\"fas fa-sun navbar-top__night-mode-icon\"></i>\r\n      {nightModeData.lightText}\r\n    </>\r\n  } else {\r\n    NavbarTopNightModeIconContainer = <>\r\n      <i className=\"fas fa-moon navbar-top__night-mode-icon\"></i>\r\n      {nightModeData.nightText}\r\n    </>\r\n  }\r\n\r\n  function handleNightModeStatus() {\r\n    dispatchIndexGroup({type: 'night-mode', newStateValue: !nightModeStatus});\r\n  }\r\n\r\n  return (\r\n    <button className=\"navbar-top__night-mode-button\" onClick={handleNightModeStatus}>\r\n      {NavbarTopNightModeIconContainer}\r\n    </button>\r\n  );\r\n}\r\n\r\ninterface NavbarTopSearchBarButtonProps {\r\n  searchBarButtonData: {\r\n    text: string\r\n  };\r\n}\r\n\r\nconst NavbarTopSearchBarButton: FC<NavbarTopSearchBarButtonProps> = ({\r\n  searchBarButtonData\r\n}) => {\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n\r\n  function handleSearchBarStatus() {\r\n    return dispatchIndexGroup({type: 'modal', modalName: 'search-bar'});\r\n  }\r\n\r\n  return (\r\n    <button className=\"navbar-top__search-bar-button\" onClick={handleSearchBarStatus}>\r\n      <i className=\"fas fa-search navbar-top__search-bar-icon\"></i>\r\n      {searchBarButtonData.text}\r\n    </button>\r\n  );\r\n}\r\n\r\ninterface NavbarTopLanguageSelectLanguages {\r\n  id: number,\r\n  imgSrc: string,\r\n  imgAlt: string,\r\n  text: string,\r\n  languageTag: string,\r\n  status: boolean\r\n}\r\n\r\ninterface NavbarTopLanguageSelectProps {\r\n  languageSelectData: {\r\n    defaultText: string,\r\n    languages: NavbarTopLanguageSelectLanguages[]\r\n  }\r\n}\r\n\r\nconst NavbarTopLanguageSelect: FC<NavbarTopLanguageSelectProps> = ({\r\n  languageSelectData\r\n}) => {\r\n  const [selectStatus, setSelectStatus] = useState(false)\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n  const currentLanguageTag = useContext(stateIndexGroupContext).currentLanguage;\r\n  const currentLanguageData: NavbarTopLanguageSelectLanguages =\r\n    {...languageSelectData.languages.filter(item => item.languageTag === currentLanguageTag)[0], status: true};\r\n  let languageSelectTextContainer;\r\n\r\n  if(currentLanguageData.status) {\r\n    languageSelectTextContainer = <>\r\n      <img src={currentLanguageData.imgSrc} alt={currentLanguageData.imgAlt} className=\"navbar-top__language-select-text-icon\"/>\r\n      {currentLanguageData.text}\r\n    </>;\r\n  } else {\r\n    languageSelectTextContainer = languageSelectData.defaultText;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(selectStatus) {\r\n      function selectClickOutside(event: any) {\r\n        const currentTargetClass = event.target.classList.value.split(' ')[0];\r\n\r\n        if(currentTargetClass !== 'navbar-top__language-select-inner' &&\r\n        currentTargetClass !== 'navbar-top__language-select-text' &&\r\n        currentTargetClass !== 'navbar-top__language-select-icon' &&\r\n        currentTargetClass !== 'navbar-top__language-option' &&\r\n        currentTargetClass !== 'navbar-top__language-option-item' &&\r\n        currentTargetClass !== 'navbar-top__language-option-icon') {\r\n          setSelectStatus(false);\r\n        }\r\n      }\r\n    \r\n      document.addEventListener('click', selectClickOutside);\r\n      return () => document.removeEventListener('click', selectClickOutside);\r\n    }\r\n  }, [selectStatus]);\r\n\r\n  function handleLanguageSelectStatus() {\r\n    setSelectStatus(!selectStatus);\r\n  }\r\n\r\n  function handleLanguageOption(languageTag: string) {\r\n    dispatchIndexGroup({type: 'current-language', newStateValue: languageTag})\r\n    setSelectStatus(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar-top__language-select\">\r\n      <div className=\"navbar-top__language-select-inner\" onClick={handleLanguageSelectStatus}>\r\n        <div className=\"navbar-top__language-select-inner-text\">\r\n          {languageSelectTextContainer}\r\n        </div>\r\n        <i className=\"fas fa-caret-down navbar-top__language-select-inner-icon\"></i>\r\n      </div>\r\n      {selectStatus &&\r\n        <ul className=\"navbar-top__language-option\">\r\n          {languageSelectData.languages.map(item => \r\n            <li className=\"navbar-top__language-option-item\" key={item.id}\r\n              onClick={() => handleLanguageOption(item.languageTag)}>\r\n              <img src={item.imgSrc} alt={item.imgAlt} className=\"navbar-top__language-option-icon\"/>\r\n              {item.text}\r\n            </li>)}\r\n        </ul>}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NavbarTopLeftGroup {\r\n  languageDataNavbarTopLeftGroup: {\r\n    mainLogo: {\r\n      imgSrc: string,\r\n      imgAlt: string\r\n    },\r\n    menu: {\r\n      homeText: string,\r\n      projectsText: string\r\n    },\r\n    nightMode: {\r\n      lightText: string,\r\n      nightText: string\r\n    },\r\n    searchBarButton: {\r\n      text: string\r\n    },\r\n    languageSelect: {\r\n      defaultText: string,\r\n      languages: [\r\n        {\r\n          id: number,\r\n          imgSrc: string,\r\n          imgAlt: string,\r\n          text: string,\r\n          languageTag: string,\r\n          status: boolean\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nexport const NavbarTopLeftGroup: FC<NavbarTopLeftGroup> = ({\r\n  languageDataNavbarTopLeftGroup\r\n}) => {\r\n  const mainLogoData = languageDataNavbarTopLeftGroup.mainLogo;\r\n  const menuData = languageDataNavbarTopLeftGroup.menu;\r\n  const nightModeData = languageDataNavbarTopLeftGroup.nightMode;\r\n  const searchBarButtonData = languageDataNavbarTopLeftGroup.searchBarButton;\r\n  const languageSelectData = languageDataNavbarTopLeftGroup.languageSelect;\r\n\r\n  return (\r\n    <section className=\"navbar-top__left-group\">\r\n      <img src={mainLogoData.imgSrc} alt={mainLogoData.imgAlt} className=\"navbar-top__logo\"/>\r\n      <NavbarTopMenu\r\n        menuData={menuData}/>\r\n      <NavbarTopNightModeButton\r\n        nightModeData={nightModeData}/>\r\n      <NavbarTopSearchBarButton\r\n        searchBarButtonData={searchBarButtonData}/>\r\n      <NavbarTopLanguageSelect\r\n        languageSelectData={languageSelectData}/>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NavbarTopLeftGroup;","import React, {FC} from 'react';\r\n\r\nconst NavbarTopRightGroup: FC = () => {\r\n  return (\r\n    <section className=\"navbar-top__right-group\">\r\n      <div className=\"navbar-top__social-media\">\r\n        <a href=\"https://www.facebook.com/gleydsonjosedasilva\"\r\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-facebook-f navbar-top__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/gleydson-jose-8600a2189\"\r\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-linkedin-in navbar-top__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://t.me/GleydsonJose\"\r\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-telegram-plane navbar-top__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://api.whatsapp.com/send?1=pt_BR&phone=55081988101515\"\r\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-whatsapp navbar-top__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://twitter.com/gleydsongst\"\r\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-twitter navbar-top__social-media-icon\"></i>\r\n        </a>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NavbarTopRightGroup;","import React, {FC} from 'react';\r\nimport './navbar-top.css';\r\nimport NavbarTopLeftGroup from './components/navbar-top-left-group';\r\nimport NavbarTopRightGroup from './components/navbar-top-right-group';\r\n\r\ninterface NavbarTopProps {\r\n  languageDataNavbarTop: {};\r\n}\r\n\r\nconst NavbarTop: FC<NavbarTopProps> = ({\r\n  languageDataNavbarTop\r\n}) => {\r\n  return (\r\n    <nav className=\"navbar-top\">\r\n      <NavbarTopLeftGroup\r\n        languageDataNavbarTopLeftGroup={languageDataNavbarTop}/>\r\n      <NavbarTopRightGroup/>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavbarTop;","import {useReducer} from 'react';\r\n\r\ninterface reducerSliderState {\r\n  currentNumProject: number;\r\n}\r\n\r\ninterface reducerSliderAction {\r\n  button: string;\r\n}\r\n\r\nfunction useSlider(projectsLength: number) {\r\n  function reducerSlider(state: reducerSliderState, action: reducerSliderAction) {\r\n    switch(action.button) {\r\n      case 'next':\r\n        if(state.currentNumProject < projectsLength-1) {\r\n          return {currentNumProject: state.currentNumProject + 1};\r\n        } else {\r\n          return {currentNumProject: state.currentNumProject};\r\n        }\r\n      case 'back':\r\n        if(state.currentNumProject > 0) {\r\n          return {currentNumProject: state.currentNumProject - 1};\r\n        } else {\r\n          return {currentNumProject: state.currentNumProject};\r\n        }\r\n      default:\r\n        throw new Error(\"This type don't exist!\");\r\n    }\r\n  }\r\n\r\n  const initialState: reducerSliderState = {currentNumProject: 0};\r\n  return useReducer(reducerSlider, initialState);\r\n}\r\n\r\nexport default useSlider;","import React, {FC, useState, useContext} from 'react';\r\nimport './my-favorite-projects.css';\r\nimport {stateIndexGroupContext} from '../../index';\r\nimport useSlider from '../../utils/sliderReducerHook';\r\n\r\ninterface MyFavoriteProjectsProjects {\r\n  id: number,\r\n  imgSrc: string,\r\n  imgAlt: string,\r\n  description: string\r\n}\r\n\r\ninterface MyFavoriteProjectsProps {\r\n  myFavoriteProjectsData: {\r\n    title: string,\r\n    projects: MyFavoriteProjectsProjects[]\r\n  };\r\n}\r\n\r\nconst MyFavoriteProjects: FC<MyFavoriteProjectsProps> = ({\r\n  myFavoriteProjectsData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const projects = myFavoriteProjectsData.projects;\r\n  const [state, dispatch] = useSlider(projects.length);\r\n  const titleClass = `my-favorite-projects__title${nightModeStatus ?\r\n    ' my-favorite-projects__title_night_mode' : ''}`;\r\n  const sliderClass = `my-favorite-projects__slider${nightModeStatus ?\r\n    ' my-favorite-projects__slider_night_mode' : ''}`;\r\n  const sliderDescriptionClass = `my-favorite-projects__slider-description${nightModeStatus ?\r\n    ' my-favorite-projects__slider-description_night_mode' : ''}`;\r\n  let sliderButtonBackClass = 'my-favorite-projects__slider-button';\r\n  let sliderButtonBackDisabled = false;\r\n  let sliderButtonNextClass = 'my-favorite-projects__slider-button';\r\n  let sliderButtonNextDisabled = false;\r\n  const [currentImageLoaded, setCurrentImageLoaded] = useState(false);\r\n\r\n  if(currentImageLoaded === false) {\r\n    sliderButtonBackClass+=' my-favorite-projects__slider-button_disabled';\r\n    sliderButtonBackDisabled = true;\r\n    sliderButtonNextClass+=' my-favorite-projects__slider-button_disabled';\r\n    sliderButtonNextDisabled = true;\r\n  } else {\r\n    switch(state.currentNumProject) {\r\n      case 0:\r\n        sliderButtonBackClass+=' my-favorite-projects__slider-button_disabled';\r\n        sliderButtonBackDisabled = true;\r\n        break;\r\n      case projects.length-1:\r\n        sliderButtonNextClass+=' my-favorite-projects__slider-button_disabled';\r\n        sliderButtonNextDisabled = true;\r\n        break;\r\n      default:\r\n        sliderButtonBackClass = 'my-favorite-projects__slider-button';\r\n        sliderButtonBackDisabled = false;\r\n        sliderButtonNextClass = 'my-favorite-projects__slider-button';\r\n        sliderButtonNextDisabled = false;\r\n    }\r\n  }\r\n\r\n  function handleCurrentImageLoaded() {\r\n    setCurrentImageLoaded(true);\r\n  }\r\n\r\n  function clickSliderBtnBack() {\r\n    dispatch({button: 'back'});\r\n    setCurrentImageLoaded(false);\r\n  }\r\n\r\n  function clickSliderBtnNext() {\r\n    dispatch({button: 'next'});\r\n    setCurrentImageLoaded(false);\r\n  }\r\n\r\n  return (\r\n    <section className=\"my-favorite-projects\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fas fa-star my-favorite-projects__title-icon\"></i>\r\n        {myFavoriteProjectsData.title}\r\n      </h1>\r\n      <div className={sliderClass}>\r\n        <img src={projects[state.currentNumProject].imgSrc}\r\n          alt={projects[state.currentNumProject].imgAlt}\r\n          className=\"my-favorite-projects__slider_image\"\r\n          onLoad={handleCurrentImageLoaded}/>\r\n        <div className=\"my-favorite-projects__slider-btngroup\">\r\n          <button className={sliderButtonBackClass}\r\n            onClick={clickSliderBtnBack}\r\n            disabled={sliderButtonBackDisabled}>\r\n            <i className=\"fas fa-chevron-left my-favorite-projects__slider-icon\"></i>\r\n          </button>\r\n          {currentImageLoaded === false &&\r\n            <img src=\"./images/loaders/loader.svg\" alt=\"Loader\"\r\n              className=\"my-favorite-projects__slider-loader\"/>}\r\n          <button className={sliderButtonNextClass}\r\n            onClick={clickSliderBtnNext}\r\n            disabled={sliderButtonNextDisabled}>\r\n            <i className=\"fas fa-chevron-right my-favorite-projects__slider-icon\"></i>\r\n          </button>\r\n        </div>\r\n        <p className={sliderDescriptionClass}>\r\n          {projects[state.currentNumProject].description}\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MyFavoriteProjects;","import React, {FC, useContext} from 'react';\r\nimport './about-me.css';\r\nimport {stateIndexGroupContext} from '../../index';\r\n\r\ninterface AboutMeProps {\r\n  aboutMeData: {\r\n    title: string,\r\n    text: string\r\n  }\r\n}\r\n\r\nconst AboutMe: FC<AboutMeProps> = ({\r\n  aboutMeData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const titleClass = `about-me__title${nightModeStatus ? ' about-me__title_night_mode' : ''}`;\r\n  const textClass = `about-me__text${nightModeStatus ? ' about-me__text_night_mode' : ''}`;\r\n\r\n  return (\r\n    <section className=\"about-me\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fas fa-scroll about-me__title-icon\"></i>\r\n        {aboutMeData.title}\r\n      </h1>\r\n      <p className={textClass}>{aboutMeData.text}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AboutMe;","import React, {FC, useContext} from 'react';\r\nimport './tools-i-currently-use.css';\r\nimport {stateIndexGroupContext} from '../../index';\r\n\r\ninterface ToolsICurrentlyUseTools {\r\n  id: number,\r\n  imgSrc: string,\r\n  imgAlt: string,\r\n  title: string\r\n}\r\n\r\ninterface ToolsICurrentlyUseProps {\r\n  toolsICurrentlyUseData: {\r\n    title: string,\r\n    tools: [ToolsICurrentlyUseTools],\r\n    map?<U>(\r\n      callbackfn: (\r\n        value: ToolsICurrentlyUseTools,\r\n        index: number,\r\n        array: ToolsICurrentlyUseTools[]\r\n      ) => U,\r\n      thisArg?: any\r\n    ): U[];\r\n  }\r\n}\r\n\r\nconst ToolsICurrentlyUse: FC<ToolsICurrentlyUseProps> = ({\r\n  toolsICurrentlyUseData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const titleClass = `tools-i-currently-use__title${nightModeStatus ?\r\n    ' tools-i-currently-use__title_night_mode' : ''}`;\r\n\r\n  return (\r\n    <section className=\"tools-i-currently-use\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fas fa-tools tools-i-currently-use__title-icon\"></i>\r\n        {toolsICurrentlyUseData.title}\r\n      </h1>\r\n      <div className=\"tools-i-currently-use__tools-group\">\r\n        {toolsICurrentlyUseData.tools.map(item =>\r\n          <img src={item.imgSrc} alt={item.imgAlt}\r\n            className=\"tools-i-currently-use__tools-item\"\r\n            title={item.title} key={item.id}/>)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ToolsICurrentlyUse;","import React, {FC, useContext} from 'react';\r\nimport './tools-i-have-used.css';\r\nimport {stateIndexGroupContext} from '../../index';\r\n\r\ninterface ToolsIHaveUsedTools {\r\n  id: number,\r\n  imgSrc: string,\r\n  imgAlt: string,\r\n  title: string\r\n}\r\n\r\ninterface ToolsIHaveUsedProps {\r\n  toolsIHaveUsedData: {\r\n    title: string,\r\n    tools: [ToolsIHaveUsedTools],\r\n    map?<U>(\r\n      callbackfn: (\r\n        value: ToolsIHaveUsedTools,\r\n        index: number,\r\n        array: ToolsIHaveUsedTools[]\r\n      ) => U,\r\n      thisArg?: any\r\n    ): U[];\r\n  }\r\n}\r\n\r\nconst ToolsIHaveUsed: FC<ToolsIHaveUsedProps> = ({\r\n  toolsIHaveUsedData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const titleClass = `tools-i-have-used__title${nightModeStatus ?\r\n    ' tools-i-have-used__title_night_mode' : ''}`;\r\n\r\n  return (\r\n    <section className=\"tools-i-have-used\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fas fa-toolbox tools-i-have-used__title-icon\"></i>\r\n        {toolsIHaveUsedData.title}\r\n      </h1>\r\n      <div className=\"tools-i-have-used__tools-group\">\r\n        {toolsIHaveUsedData.tools.map(item =>\r\n          <img src={item.imgSrc} alt={item.imgAlt}\r\n            className=\"tools-i-have-used__tools-item\"\r\n            title={item.title} key={item.id}/>)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ToolsIHaveUsed;","import React, {FC, useState, useEffect, useContext} from 'react';\r\nimport './my-github.css';\r\nimport {stateIndexGroupContext} from '../../index';\r\n\r\ninterface MyGitHubProps {\r\n  myGitHubData: {\r\n    title: string,\r\n    imgAlt: string,\r\n    repositoriesTitle: string\r\n  }\r\n}\r\n\r\nconst MyGitHub: FC<MyGitHubProps> = ({\r\n  myGitHubData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const titleClass = `my-github__title${nightModeStatus ?\r\n    ' my-github__title_night_mode' : ''}`;\r\n  const detailsClass = `my-github__details${nightModeStatus ?\r\n    ' my-github__details_night_mode' : ''}`;\r\n  const [gitHubData, setGitHubData] = useState({profileImg: '', repositoriesTotal: 0});\r\n  \r\n  useEffect(() => {\r\n    fetch('https://api.github.com/users/satuctkode')\r\n    .then((data) => {\r\n      data.json().then((json) => {\r\n        setGitHubData({\r\n          profileImg: json.avatar_url,\r\n          repositoriesTotal: json.public_repos\r\n        });\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      throw new Error(error);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"my-github\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fab fa-github my-github__title-icon\"></i>\r\n        {myGitHubData.title}\r\n      </h1>\r\n      <div className={detailsClass}>\r\n        <img src={gitHubData.profileImg} alt={myGitHubData.imgAlt} className=\"my-github__profile-img\"/>\r\n        <div className=\"my-github__repositories\">\r\n          <h1 className=\"my-github__repositories-title\">{myGitHubData.repositoriesTitle}</h1>\r\n          <p className=\"my-github__repositories-total\">{gitHubData.repositoriesTotal}</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MyGitHub;","import React, {FC} from 'react';\r\nimport MyFavoriteProjects from '../my-favorite-projects/my-favorite-projects';\r\nimport AboutMe from '../about-me/about-me';\r\nimport ToolsICurrentlyUse from '../tools-i-currently-use/tools-i-currently-use';\r\nimport ToolsIHaveUsed from '../tools-i-have-used/tools-i-have-used';\r\nimport MyGitHub from '../my-github/my-github';\r\nimport './home.css';\r\n\r\ninterface HomeProps {\r\n  languageDataHome: {\r\n    myFavoriteProjects: {\r\n      title: string,\r\n      projects: {\r\n        id: number,\r\n        imgSrc: string,\r\n        imgAlt: string,\r\n        description: string\r\n      }[]\r\n    },\r\n    aboutMe: {\r\n      title: string,\r\n      text: string\r\n    },\r\n    toolsICurrentlyUse: {\r\n      title: string,\r\n      tools: [\r\n        {\r\n          id: number,\r\n          imgSrc: string,\r\n          imgAlt: string,\r\n          title: string\r\n        }\r\n      ]\r\n    },\r\n    toolsIHaveUsed: {\r\n      title: string,\r\n      tools: [\r\n        {\r\n          id: number,\r\n          imgSrc: string,\r\n          imgAlt: string,\r\n          title: string\r\n        }\r\n      ]\r\n    },\r\n    myGitHub: {\r\n      title: string,\r\n      imgAlt: string,\r\n      repositoriesTitle: string\r\n    }\r\n  }\r\n}\r\n\r\nconst Home: FC<HomeProps> = ({\r\n  languageDataHome\r\n}) => {\r\n  return (\r\n    <section className=\"home\">\r\n      <MyFavoriteProjects\r\n        myFavoriteProjectsData={languageDataHome.myFavoriteProjects}/>\r\n      <AboutMe\r\n        aboutMeData={languageDataHome.aboutMe}/>\r\n      <ToolsICurrentlyUse\r\n        toolsICurrentlyUseData={languageDataHome.toolsICurrentlyUse}/>\r\n      <ToolsIHaveUsed\r\n        toolsIHaveUsedData={languageDataHome.toolsIHaveUsed}/>\r\n      <MyGitHub\r\n        myGitHubData={languageDataHome.myGitHub}/>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {FC} from 'react';\r\nimport './alert.css';\r\n\r\ninterface AlertProps {\r\n  alertData: {\r\n    text: string;\r\n    linkText: string;\r\n  }\r\n}\r\n\r\nconst Alert: FC<AlertProps> = ({\r\n  alertData\r\n}) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <p className=\"alert__text\">{alertData.text} <a href=\"https://github.com/satuctkode?tab=repositories\" className=\"alert__link\" target=\"_blank\" rel=\"noopener noreferrer\">{alertData.linkText}</a></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;","import React, {FC, useContext} from 'react';\r\nimport './customer-projects.css';\r\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\r\n\r\ninterface CustomerProjectsProjectsData {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  titleType: string;\r\n  sourceCodeLink: string;\r\n  websiteLink: string;\r\n  imgSrc: string;\r\n  imgAlt: string;\r\n  description: string;\r\n  imagesSlider: [\r\n    {\r\n      id: number,\r\n      imgSrc: string,\r\n      imgAlt: string\r\n    }\r\n  ];\r\n}\r\n\r\ninterface CustomerProjectsProps {\r\n  customerProjectsData: {\r\n    title: string,\r\n    buttonText: string\r\n  };\r\n  projectsData: CustomerProjectsProjectsData[];\r\n}\r\n\r\nconst CustomerProjects: FC<CustomerProjectsProps> = ({\r\n  customerProjectsData, projectsData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n  const titleClass = `customer-projects__title${nightModeStatus ?\r\n    ' customer-projects__title_night_mode' : ''}`;\r\n\r\n  function openProjectsDetailsModal(productData: CustomerProjectsProjectsData) {\r\n    dispatchIndexGroup({type: 'project-details-data', newStateValue: productData});\r\n    dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\r\n  }\r\n\r\n  return (\r\n    <section className=\"customer-projects\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fas fa-users customer-projects__title-icon\"></i>\r\n        {customerProjectsData.title}\r\n      </h1>\r\n      <section className=\"customer-projects__items-group\">\r\n        {projectsData.map(item => \r\n          <div className=\"customer-projects__item\" key={item.id}>\r\n            <img src={item.imgSrc} alt={item.imgAlt} className='customer-projects__image'/>\r\n            <button className=\"customer-projects__button\"\r\n              onClick={() => openProjectsDetailsModal(item)}>\r\n              <i className=\"fas fa-eye customer-projects__button-icon\"></i>\r\n              {customerProjectsData.buttonText}\r\n            </button>\r\n          </div>)}\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CustomerProjects;","import React, {FC, useContext} from 'react';\r\nimport './my-projects.css';\r\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\r\n\r\ninterface MyProjectsProjectsData {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  titleType: string;\r\n  sourceCodeLink: string;\r\n  websiteLink: string;\r\n  imgSrc: string;\r\n  imgAlt: string;\r\n  description: string;\r\n  imagesSlider: [\r\n    {\r\n      id: number,\r\n      imgSrc: string,\r\n      imgAlt: string\r\n    }\r\n  ];\r\n}\r\n\r\ninterface MyProjectsProps {\r\n  myProjectsData: {\r\n    title: string,\r\n    buttonText: string\r\n  };\r\n  projectsData: MyProjectsProjectsData[];\r\n}\r\n\r\nconst MyProjects: FC<MyProjectsProps> = ({\r\n  myProjectsData, projectsData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n  const titleClass = `my-projects__title${nightModeStatus ?\r\n    ' my-projects__title_night_mode' : ''}`;\r\n\r\n  function openProjectsDetailsModal(productData: MyProjectsProjectsData) {\r\n    dispatchIndexGroup({type: 'project-details-data', newStateValue: productData});\r\n    dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\r\n  }\r\n\r\n  return (\r\n    <section className=\"my-projects\">\r\n      <h1 className={titleClass}>\r\n        <i className=\"fas fa-project-diagram my-projects__title-icon\"></i>\r\n        {myProjectsData.title}\r\n      </h1>\r\n      <section className=\"my-projects__items-group\">\r\n        {projectsData.map!(item => \r\n          <div className=\"my-projects__item\" key={item.id}>\r\n            <img src={item.imgSrc} alt={item.imgAlt} className='my-projects__image'/>\r\n            <button className=\"my-projects__button\"\r\n              onClick={() => openProjectsDetailsModal(item)}>\r\n              <i className=\"fas fa-eye my-projects__button-icon\"></i>\r\n              {myProjectsData.buttonText}\r\n            </button>\r\n          </div>)}\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MyProjects;","import React, {FC} from 'react';\r\nimport Alert from '../alert/alert';\r\nimport CustomerProjects from '../customer-projects/customer-projects';\r\nimport MyProjects from '../my-projects/my-projects';\r\nimport './projects.css';\r\n\r\ninterface ProjectsProps {\r\n  languageDataProjects: {\r\n    alert: {\r\n      text: string;\r\n      linkText: string;\r\n    },\r\n    customerProjects: {\r\n      title: string,\r\n      buttonText: string\r\n    },\r\n    myProjects: {\r\n      title: string;\r\n      buttonText: string;\r\n    }\r\n  };\r\n  languageDataProjectsData: [\r\n    {\r\n      id: number,\r\n      name: string,\r\n      type: string,\r\n      titleType: string,\r\n      sourceCodeLink: string,\r\n      websiteLink: string,\r\n      imgSrc: string,\r\n      imgAlt: string,\r\n      description: string,\r\n      imagesSlider: [\r\n        {\r\n          id: number,\r\n          imgSrc: string,\r\n          imgAlt: string\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n}\r\n\r\nconst Projects: FC<ProjectsProps> = ({\r\n  languageDataProjects, languageDataProjectsData\r\n}) => {\r\n  const customerProjects = languageDataProjectsData.filter(item => item.type === 'customerProjects' && item);\r\n  const myProjects = languageDataProjectsData.filter(item => item.type === 'myProjects' && item);\r\n\r\n  return (\r\n    <section className=\"projects\">\r\n      <Alert\r\n        alertData={languageDataProjects.alert}/>\r\n      <CustomerProjects\r\n        customerProjectsData={languageDataProjects.customerProjects}\r\n        projectsData={customerProjects}/>\r\n      <MyProjects\r\n        myProjectsData={languageDataProjects.myProjects}\r\n        projectsData={myProjects}/>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Projects;","import React, {FC} from 'react';\r\nimport './footer.css';\r\n\r\ninterface FooterProps {\r\n  languageDataFooter: {\r\n    title: string;\r\n  }\r\n}\r\n\r\nconst Footer: FC<FooterProps> = ({\r\n  languageDataFooter\r\n}) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <h1 className=\"footer__title\">{languageDataFooter.title}</h1>\r\n      <div className=\"footer__social-media\">\r\n        <a href=\"https://www.facebook.com/gleydsonjosedasilva\"\r\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-facebook-f footer__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/gleydson-jose-8600a2189/\"\r\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-linkedin-in footer__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://t.me/GleydsonJose\"\r\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-telegram-plane footer__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://api.whatsapp.com/send?1=pt_BR&phone=55081988101515\"\r\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-whatsapp footer__social-media-icon\"></i>\r\n        </a>\r\n        <a href=\"https://twitter.com/gleydsongst\"\r\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fab fa-twitter footer__social-media-icon\"></i>\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, {FC, useState, createContext, useContext} from 'react';\r\nimport './main.css';\r\nimport NavbarTop from '../navbar-top/navbar-top';\r\nimport Home from '../home/home';\r\nimport Projects from  '../projects/projects';\r\nimport Footer from '../footer/footer';\r\nimport {stateIndexGroupContext} from '../../index';\r\n\r\nexport const stateCurrentPageContext = createContext('');\r\nexport const setStateCurrentPageContext = createContext<Function>(() => false);\r\n\r\ninterface MainProps {\r\n  languageData: {\r\n    home: {\r\n      myFavoriteProjects: {\r\n        title: string,\r\n        projects: {\r\n          id: number,\r\n          imgSrc: string,\r\n          imgAlt: string,\r\n          description: string\r\n        }[]\r\n      },\r\n      aboutMe: {\r\n        title: string,\r\n        text: string\r\n      },\r\n      toolsICurrentlyUse: {\r\n        title: string,\r\n        tools: [\r\n          {\r\n            id: number,\r\n            imgSrc: string,\r\n            imgAlt: string,\r\n            title: string\r\n          }\r\n        ]\r\n      },\r\n      toolsIHaveUsed: {\r\n        title: string,\r\n        tools: [\r\n          {\r\n            id: number,\r\n            imgSrc: string,\r\n            imgAlt: string,\r\n            title: string\r\n          }\r\n        ]\r\n      },\r\n      myGitHub: {\r\n        title: string,\r\n        imgAlt: string,\r\n        repositoriesTitle: string\r\n      }\r\n    },\r\n    modal: {},\r\n    navbarTop: {\r\n      mainLogo: {},\r\n      menu: {},\r\n      nightMode: {},\r\n      searchBarButton: {},\r\n      languageSelect: {}\r\n    },\r\n    projects: {\r\n      alert: {\r\n        text: string;\r\n        linkText: string;\r\n      },\r\n      customerProjects: {\r\n        title: string,\r\n        buttonText: string\r\n      },\r\n      myProjects: {\r\n        title: string,\r\n        buttonText: string\r\n      }\r\n    },\r\n    projectsData: [\r\n      {\r\n        id: number,\r\n        name: string,\r\n        type: string,\r\n        titleType: string,\r\n        sourceCodeLink: string,\r\n        websiteLink: string,\r\n        imgSrc: string,\r\n        imgAlt: string,\r\n        description: string,\r\n        imagesSlider: [\r\n          {\r\n            id: number,\r\n            imgSrc: string,\r\n            imgAlt: string\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    footer: {\r\n      title: string;\r\n    }\r\n  };\r\n}\r\n\r\nconst Main: FC<MainProps> = ({\r\n  languageData\r\n}) => {\r\n  const [currentPage, setCurrentPage] = useState('home');\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const mainClass = `main${nightModeStatus ? ' main_night_mode': ''}`;\r\n  let currentPageContainer: unknown = '';\r\n\r\n  switch(currentPage) {\r\n    case 'home':\r\n      currentPageContainer =\r\n        <Home languageDataHome={languageData.home}/>;\r\n      break;\r\n    case 'projects':\r\n      currentPageContainer =\r\n        <Projects languageDataProjects={languageData.projects}\r\n          languageDataProjectsData={languageData.projectsData}/>;\r\n      break;\r\n    default:\r\n      currentPageContainer = '';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <main className={mainClass}>\r\n      <setStateCurrentPageContext.Provider value={setCurrentPage}>\r\n        <stateCurrentPageContext.Provider value={currentPage}>\r\n          <NavbarTop\r\n            languageDataNavbarTop={languageData.navbarTop}/>\r\n        </stateCurrentPageContext.Provider>\r\n      </setStateCurrentPageContext.Provider>\r\n      {currentPageContainer}\r\n      <Footer\r\n        languageDataFooter={languageData.footer}/>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, {FC, useState, useEffect, useContext, useRef, MouseEvent, ChangeEvent} from 'react';\r\nimport './search-bar-modal.css';\r\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\r\n\r\ninterface SearchBarModalProjectsData {\r\n  id: number,\r\n  name: string,\r\n  type: string,\r\n  titleType: string,\r\n  sourceCodeLink: string,\r\n  websiteLink: string,\r\n  imgSrc: string,\r\n  imgAlt: string,\r\n  description: string,\r\n  imagesSlider: [\r\n    {\r\n      id: number,\r\n      imgSrc: string,\r\n      imgAlt: string\r\n    }\r\n  ]\r\n}\r\n\r\ninterface SearchBarModalProps {\r\n  searchBarModalData: {\r\n    inputPlaceholder: string\r\n  };\r\n  projectsData: SearchBarModalProjectsData[];\r\n}\r\n\r\nconst SearchBarModal: FC<SearchBarModalProps> = ({\r\n  searchBarModalData, projectsData\r\n}) => {\r\n  const [searchBarStateValue, setSearchBarStateValue] = useState('');\r\n  const [newSearchBarProjectsList, setNewSearchBarProjectsList] = useState<SearchBarModalProjectsData[]>([]);\r\n  const [searchBarSubmitStatus, setSearchBarSubmitStatus] = useState<boolean>(false);\r\n  const [searchBarDataChosen, setSearchBarDataChosen] = useState<SearchBarModalProjectsData>();\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const searchBarRef = useRef<HTMLInputElement>(null);\r\n  const inputClass = `search-bar-modal__input${nightModeStatus ?\r\n    ' search-bar-modal__input_night_mode' : ''}`;\r\n  let submitButtonClass = 'search-bar-modal__submit-button';\r\n  const listClass = `search-bar-modal__list${nightModeStatus ?\r\n    ' search-bar-modal__list_night_mode' : ''}`;\r\n\r\n  if(nightModeStatus) {\r\n    if(searchBarSubmitStatus) {\r\n      submitButtonClass = `search-bar-modal__submit-button\r\n        search-bar-modal__submit-button_night_mode`;\r\n    } else {\r\n      submitButtonClass = `search-bar-modal__submit-button \r\n        search-bar-modal__submit-button_night_mode\r\n        search-bar-modal__submit-button_night_mode-btn-disabled`;\r\n    }\r\n  } else {\r\n    if(searchBarSubmitStatus) {\r\n      submitButtonClass = 'search-bar-modal__submit-button';\r\n    } else {\r\n      submitButtonClass = 'search-bar-modal__submit-button search-bar-modal__submit-button_disabled';\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchBarRef.current!.focus();\r\n  }, [])\r\n\r\n  function searchProjects(event: ChangeEvent<HTMLInputElement>) {\r\n    const searchBarEventValue = event.target.value;\r\n    const searchBarRegex = new RegExp(`^${searchBarEventValue}`, 'i');\r\n    let searchBarDataFound = projectsData.filter!(item => searchBarRegex.test(item.name) && item.name);\r\n\r\n    if(searchBarDataFound.length === 1 && searchBarDataFound[0].name === searchBarEventValue) {\r\n      setSearchBarDataChosen(searchBarDataFound[0]);\r\n      setSearchBarSubmitStatus(true);\r\n      searchBarDataFound = [];\r\n    } else {\r\n      setSearchBarDataChosen(undefined);\r\n      setSearchBarSubmitStatus(false);\r\n      dispatchIndexGroup({type: 'project-details-data', newStateValue: {}});\r\n    }\r\n\r\n    if(searchBarEventValue.length > 0) {\r\n      setNewSearchBarProjectsList(searchBarDataFound);\r\n    } else {\r\n      setNewSearchBarProjectsList([]);\r\n    }\r\n\r\n    setSearchBarStateValue(searchBarEventValue);\r\n  }\r\n\r\n  function submitData(event: MouseEvent) {\r\n    event.preventDefault();\r\n    dispatchIndexGroup({type: 'modal', modalName: 'search-bar'});\r\n    dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\r\n    dispatchIndexGroup({type: 'project-details-data', newStateValue: searchBarDataChosen});\r\n  }\r\n\r\n  function selectProject(projectData: SearchBarModalProjectsData) {\r\n    setSearchBarStateValue(projectData.name);\r\n    setNewSearchBarProjectsList([]);\r\n    setSearchBarDataChosen(projectData);\r\n    setSearchBarSubmitStatus(true);\r\n    searchBarRef.current!.focus();\r\n  }\r\n\r\n  return (\r\n    <section className=\"search-bar-modal\">\r\n      <form className=\"search-bar-modal__form\" method=\"POST\">\r\n        <input type=\"search\" placeholder={searchBarModalData.inputPlaceholder} className={inputClass} value={searchBarStateValue}\r\n          onChange={searchProjects} ref={searchBarRef}\r\n          maxLength={50}/>\r\n        <button type=\"submit\" className={submitButtonClass} onClick={submitData}\r\n          disabled={searchBarSubmitStatus === false && true}>\r\n          <i className=\"fas fa-search search-bar-modal__submit-icon\"></i>\r\n        </button>\r\n      </form>\r\n      {newSearchBarProjectsList.length > 0 &&\r\n        <ul className={listClass}>\r\n          {newSearchBarProjectsList.map(item =>\r\n            <li className=\"search-bar-modal__item\" key={item.id} onClick={() => selectProject(item)}>{item.name}</li>)}\r\n        </ul>}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SearchBarModal;","import React, {FC, useState, useContext} from 'react';\r\nimport './project-details-modal.css';\r\nimport {stateIndexGroupContext} from '../../index';\r\nimport useSlider from '../../utils/sliderReducerHook';\r\n\r\ninterface ProjectDetailsData {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  titleType: string;\r\n  sourceCodeLink: string;\r\n  websiteLink: string;\r\n  imgSrc: string;\r\n  imgAlt: string;\r\n  description: string;\r\n  imagesSlider: [\r\n    {\r\n      id: number,\r\n      imgSrc: string,\r\n      imgAlt: string\r\n    }\r\n  ];\r\n}\r\n\r\ninterface ProjectDetailsModalProps {\r\n  projectDetailsModalData: {\r\n    buttonSourceCodeText: string,\r\n    buttonWebsiteText: string,\r\n    descriptionTitle: string\r\n  };\r\n}\r\n\r\nconst ProjectDetailsModal: FC<ProjectDetailsModalProps> = ({\r\n  projectDetailsModalData\r\n}) => {\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const projectDetailsData: ProjectDetailsData = useContext(stateIndexGroupContext).projectDetailsData;\r\n  const projectDetailsSliderData = projectDetailsData.imagesSlider;\r\n  const [state, dispatch] = useSlider(projectDetailsSliderData.length);\r\n  const titleBodyClass = `project-details-modal__title-body${nightModeStatus ?\r\n    ' project-details-modal__title-body_night_mode' : ''}`;\r\n  const titleItemClass = `project-details-modal__title-item${nightModeStatus ?\r\n    ' project-details-modal__title-item_night_mode' : ''}`;\r\n  const sliderClass = `project-details-modal__slider${nightModeStatus ?\r\n    ' project-details-modal__slider_night_mode' : ''}`;\r\n  const buttonItemClass = `project-details-modal__button-item${nightModeStatus ?\r\n    ' project-details-modal__button-item_night_mode' : ''}`;\r\n  const descriptionClass = `project-details-modal__description${nightModeStatus ?\r\n    ' project-details-modal__description_night_mode' : ''}`;\r\n  const descriptionTitleClass = `project-details-modal__description-title${nightModeStatus ?\r\n    ' project-details-modal__description-title_night_mode' : ''}`;\r\n  let sliderButtonBackClass = 'project-details-modal__slider-button';\r\n  let sliderButtonBackDisabled = false;\r\n  let sliderButtonNextClass = 'project-details-modal__slider-button';\r\n  let sliderButtonNextDisabled = false;\r\n  const [currentImageLoaded, setCurrentImageLoaded] = useState(false);\r\n\r\n  if(currentImageLoaded === false) {\r\n    sliderButtonBackClass+=' project-details-modal__slider-button_disabled';\r\n    sliderButtonBackDisabled = true;\r\n    sliderButtonNextClass+=' project-details-modal__slider-button_disabled';\r\n    sliderButtonNextDisabled = true;\r\n  } else {\r\n    switch(state.currentNumProject) {\r\n      case 0:\r\n        sliderButtonBackClass+=' project-details-modal__slider-button_disabled';\r\n        sliderButtonBackDisabled = true;\r\n        break;\r\n      case projectDetailsSliderData.length-1:\r\n        sliderButtonNextClass+=' project-details-modal__slider-button_disabled';\r\n        sliderButtonNextDisabled = true;\r\n        break;\r\n      default:\r\n        sliderButtonBackClass = 'project-details-modal__slider-button';\r\n        sliderButtonBackDisabled = false;\r\n        sliderButtonNextClass = 'project-details-modal__slider-button';\r\n        sliderButtonNextDisabled = false;\r\n    }\r\n  }\r\n\r\n  function handleCurrentImageLoaded() {\r\n    setCurrentImageLoaded(true);\r\n  }\r\n\r\n  function clickSliderBtnBack() {\r\n    dispatch({button: 'back'});\r\n    setCurrentImageLoaded(false);\r\n  }\r\n\r\n  function clickSliderBtnNext() {\r\n    dispatch({button: 'next'});\r\n    setCurrentImageLoaded(false);\r\n  }\r\n\r\n  return (\r\n    <section className=\"project-details-modal\">\r\n      <div className={titleBodyClass}>\r\n        <i className=\"fas fa-project-diagram project-details-modal__title-icon\"></i>\r\n        <p className=\"project-details-modal__title-inner\">\r\n          <span className={titleItemClass}>{projectDetailsData.titleType}</span>\r\n          <span className={titleItemClass}>{projectDetailsData.name}</span>\r\n        </p>\r\n      </div>\r\n      <div className={sliderClass}>\r\n        <img src={projectDetailsSliderData[state.currentNumProject].imgSrc}\r\n          alt={projectDetailsSliderData[state.currentNumProject].imgAlt}\r\n          className=\"project-details-modal__slider_image\"\r\n          onLoad={handleCurrentImageLoaded}/>\r\n        <div className=\"project-details-modal__slider-btngroup\">\r\n          <button className={sliderButtonBackClass}\r\n            onClick={clickSliderBtnBack}\r\n            disabled={sliderButtonBackDisabled}>\r\n            <i className=\"fas fa-chevron-left project-details-modal__slider-icon\"></i>\r\n          </button>\r\n          {currentImageLoaded === false &&\r\n            <img src=\"./images/loaders/loader.svg\" alt=\"Loader\"\r\n              className=\"project-details-modal-projects__slider-loader\"/>}\r\n          <button className={sliderButtonNextClass}\r\n            onClick={clickSliderBtnNext}\r\n            disabled={sliderButtonNextDisabled}>\r\n            <i className=\"fas fa-chevron-right project-details-modal__slider-icon\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"project-details-modal__button-group\">\r\n        {projectDetailsData.type !== 'customerProjects' &&\r\n          <a href={projectDetailsData.sourceCodeLink} className={buttonItemClass}\r\n            target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-code project-details-modal__button-icon\"></i>\r\n            {projectDetailsModalData.buttonSourceCodeText}\r\n          </a>}\r\n        <a href={projectDetailsData.websiteLink} className={buttonItemClass}\r\n          target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <i className=\"fas fa-external-link-alt project-details-modal__button-icon\"></i>\r\n          {projectDetailsModalData.buttonWebsiteText}\r\n        </a>\r\n      </div>\r\n      <div className={descriptionClass}>\r\n        <h1 className={descriptionTitleClass}>\r\n          <i className=\"fas fa-file-alt project-details-modal__description-title-icon\"></i>\r\n          {projectDetailsModalData.descriptionTitle}\r\n        </h1>\r\n        <p className=\"project-details-modal__description-text\">\r\n          {projectDetailsData.description}\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ProjectDetailsModal;","import React, {FC, useContext} from 'react';\r\nimport './modal.css';\r\nimport SearchBarModal from '../search-bar-modal/search-bar-modal';\r\nimport ProjectDetailsModal from '../project-details-modal/project-details-modal';\r\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\r\n\r\ninterface ModalProps {\r\n  languageDataModal: {\r\n    searchBarModal: {\r\n      inputPlaceholder: string\r\n    },\r\n    projectDetailsModal: {\r\n      buttonSourceCodeText: string,\r\n      buttonWebsiteText: string,\r\n      descriptionTitle: string\r\n    }\r\n  };\r\n  languageDataProjectData: [\r\n    {\r\n      id: number,\r\n      name: string,\r\n      type: string,\r\n      titleType: string,\r\n      sourceCodeLink: string,\r\n      websiteLink: string,\r\n      imgSrc: string,\r\n      imgAlt: string,\r\n      description: string,\r\n      imagesSlider: [\r\n        {\r\n          id: number,\r\n          imgSrc: string,\r\n          imgAlt: string\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({\r\n  languageDataModal, languageDataProjectData\r\n}) => {\r\n  const stateModals = useContext(stateIndexGroupContext).modals;\r\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\r\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\r\n  let InnerModalContainer: any = '';\r\n  const innerClass = `modal__inner${nightModeStatus ? ' modal__inner_night_mode' : ''}`;\r\n  const closeButtonClass = `fas fa-times modal__close-button${nightModeStatus ?\r\n    ' modal__close-button_night_mode' : ''}`;\r\n\r\n  if(stateModals.searchBarModalStatus) {\r\n    InnerModalContainer =\r\n      <SearchBarModal\r\n        searchBarModalData={languageDataModal.searchBarModal}\r\n        projectsData={languageDataProjectData}/>;\r\n  } else if(stateModals.projectDetailsModalStatus) {\r\n    InnerModalContainer =\r\n      <ProjectDetailsModal\r\n        projectDetailsModalData={languageDataModal.projectDetailsModal}/>\r\n  } else {\r\n    InnerModalContainer = '';\r\n  }\r\n\r\n  function closeModal(event: any) {\r\n    const modalCurrentClass = event.target.classList.value.split(' ');\r\n     \r\n    if(modalCurrentClass[0] === 'modal' ||\r\n      modalCurrentClass[2] === 'modal__close-button') {\r\n      if(stateModals.searchBarModalStatus) {\r\n        dispatchIndexGroup({type: 'modal', modalName: 'search-bar'});\r\n        dispatchIndexGroup({type: 'project-details-data', newStateValue: {}});\r\n      } else if (stateModals.projectDetailsModalStatus) {\r\n        dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\r\n        dispatchIndexGroup({type: 'project-details-data', newStateValue: {}});\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={`modal${stateModals.projectDetailsModalStatus ? ' modal_big_size' : ''}`}\r\n      onClick={closeModal}>\r\n      <div className={innerClass}>\r\n        <div className=\"modal__first-group\">\r\n          <i className={closeButtonClass}></i>\r\n        </div>\r\n        <div className=\"modal__last-group\">\r\n          {InnerModalContainer}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, { useReducer, createContext } from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport Main from './blocks/main/main';\nimport Modal from './blocks/modal/modal';\nimport languageDataAPI from './api/languageData.json';\nfunction reducerIndexGroup(state, action) {\n    switch (action.type) {\n        case 'modal':\n            switch (action.modalName) {\n                case 'search-bar':\n                    return {\n                        ...state,\n                        modals: {\n                            ...state.modals,\n                            searchBarModalStatus: !state.modals.searchBarModalStatus\n                        }\n                    };\n                case 'project-details':\n                    return {\n                        ...state,\n                        modals: {\n                            ...state.modals,\n                            projectDetailsModalStatus: !state.modals.projectDetailsModalStatus\n                        }\n                    };\n                default:\n                    throw new Error(\"This modal don't exist!\");\n            }\n        case 'project-details-data':\n            return { ...state, projectDetailsData: action.newStateValue };\n        case 'current-language':\n            return { ...state, currentLanguage: action.newStateValue };\n        case 'night-mode':\n            return { ...state, nightModeStatus: action.newStateValue };\n        default:\n            throw new Error(\"This component isn't allowed!\");\n    }\n}\nlet currentLanguage = 'en';\nfetch('https://ipinfo.io').then(response => {\n    response.json().then(json => {\n        if (json.country === 'BR') {\n            currentLanguage = 'ptbr';\n        }\n        else {\n            currentLanguage = 'en';\n        }\n    }).catch(error => {\n        currentLanguage = 'en';\n        console.error(\"Error with ipinfo json\");\n    });\n}).catch(error => {\n    console.error(\"Error with ipinfo\");\n});\nconst initialStateIndexGroup = {\n    modals: {\n        searchBarModalStatus: false,\n        projectDetailsModalStatus: false\n    },\n    projectDetailsData: {\n        id: 0,\n        name: '',\n        type: '',\n        titleType: '',\n        sourceCodeLink: '',\n        websiteLink: '',\n        imgSrc: '',\n        imgAlt: '',\n        description: '',\n        imagesSlider: [\n            {\n                id: 0,\n                imgSrc: '',\n                imgAlt: ''\n            }\n        ]\n    },\n    currentLanguage,\n    nightModeStatus: false\n};\nexport const stateIndexGroupContext = createContext(initialStateIndexGroup);\nexport const dispatchIndexGroupContext = createContext((action) => { });\nconst App = () => {\n    const [indexGroupState, indexGroupDispatch] = useReducer(reducerIndexGroup, initialStateIndexGroup);\n    const currentLanguageIndex = indexGroupState.currentLanguage;\n    const languageData = languageDataAPI;\n    let ModalContainer = '';\n    if (indexGroupState.modals.searchBarModalStatus ||\n        indexGroupState.modals.projectDetailsModalStatus) {\n        document.querySelector('body').style.overflow = 'hidden';\n        ModalContainer =\n            <Modal languageDataModal={languageData[currentLanguageIndex].modal} languageDataProjectData={languageData[currentLanguageIndex].projectsData}/>;\n    }\n    else {\n        document.querySelector('body').style.overflow = 'visible';\n        ModalContainer = '';\n    }\n    return (<stateIndexGroupContext.Provider value={indexGroupState}>\r\n      <dispatchIndexGroupContext.Provider value={indexGroupDispatch}>\r\n        <Main languageData={languageData[currentLanguageIndex]}/>\r\n        {ModalContainer}\r\n      </dispatchIndexGroupContext.Provider>\r\n    </stateIndexGroupContext.Provider>);\n};\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}