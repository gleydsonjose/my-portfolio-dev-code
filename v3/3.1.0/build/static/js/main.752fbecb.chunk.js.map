{"version":3,"sources":["blocks/navbar-top/components/navbar-top-left-group.tsx","blocks/navbar-top/components/navbar-top-right-group.tsx","blocks/navbar-top/navbar-top.tsx","utils/sliderReducerHook.tsx","blocks/my-favorite-projects/my-favorite-projects.tsx","blocks/about-me/about-me.tsx","blocks/tools-i-currently-use/tools-i-currently-use.tsx","blocks/tools-i-have-used/tools-i-have-used.tsx","blocks/my-github/my-github.tsx","blocks/home/home.tsx","blocks/alert/alert.tsx","blocks/customer-projects/customer-projects.tsx","blocks/my-projects/my-projects.tsx","blocks/projects/projects.tsx","blocks/footer/footer.tsx","blocks/main/main.tsx","blocks/search-bar-modal/search-bar-modal.tsx","blocks/project-details-modal/project-details-modal.tsx","blocks/modal/modal.tsx","index.js"],"names":["NavbarTopMenu","menuData","stateCurrentPage","useContext","stateCurrentPageContext","setStateCurrentPage","setStateCurrentPageContext","handlePage","page","className","onClick","homeText","projectsText","NavbarTopNightModeButton","NavbarTopNightModeIconContainer","nightModeData","nightModeStatus","stateIndexGroupContext","dispatchIndexGroup","dispatchIndexGroupContext","useEffect","currentHour","Date","getHours","type","newStateValue","lightText","nightText","NavbarTopSearchBarButton","searchBarButtonData","modalName","text","NavbarTopLanguageSelect","languageSelectTextContainer","languageSelectData","useState","selectStatus","setSelectStatus","currentLanguageTag","currentLanguage","currentLanguageData","languages","filter","item","languageTag","selectCurrentOption","status","src","imgSrc","alt","imgAlt","defaultText","selectClickOutside","event","currentTargetClass","target","classList","value","split","document","addEventListener","removeEventListener","map","key","id","NavbarTopLeftGroup","languageDataNavbarTopLeftGroup","mainLogoData","mainLogo","menu","nightMode","searchBarButton","languageSelect","NavbarTopRightGroup","href","rel","NavbarTop","languageDataNavbarTop","useSlider","projectsLength","useReducer","state","action","button","currentNumProject","Error","MyFavoriteProjects","myFavoriteProjectsData","projects","length","dispatch","titleClass","sliderClass","sliderDescriptionClass","sliderButtonBackClass","sliderButtonBackDisabled","sliderButtonNextClass","sliderButtonNextDisabled","currentImageLoaded","setCurrentImageLoaded","title","onLoad","disabled","description","AboutMe","aboutMeData","textClass","ToolsICurrentlyUse","toolsICurrentlyUseData","tools","ToolsIHaveUsed","toolsIHaveUsedData","MyGitHub","myGitHubData","detailsClass","profileImg","repositoriesTotal","gitHubData","setGitHubData","fetch","then","data","json","avatar_url","public_repos","catch","error","repositoriesTitle","Home","languageDataHome","myFavoriteProjects","aboutMe","toolsICurrentlyUse","toolsIHaveUsed","myGitHub","Alert","alertData","linkText","CustomerProjects","customerProjectsData","projectsData","buttonText","MyProjects","myProjectsData","Projects","languageDataProjects","languageDataProjectsData","customerProjects","myProjects","alert","Footer","languageDataFooter","createContext","Main","languageData","currentPage","setCurrentPage","mainClass","currentPageContainer","home","Provider","navbarTop","footer","SearchBarModal","searchBarModalData","searchBarStateValue","setSearchBarStateValue","newSearchBarProjectsList","setNewSearchBarProjectsList","searchBarSubmitStatus","setSearchBarSubmitStatus","searchBarDataChosen","setSearchBarDataChosen","searchBarRef","useRef","inputClass","submitButtonClass","listClass","current","focus","method","placeholder","inputPlaceholder","onChange","searchBarEventValue","searchBarRegex","RegExp","searchBarDataFound","test","name","undefined","ref","maxLength","preventDefault","projectData","ProjectDetailsModal","projectDetailsModalData","projectDetailsData","projectDetailsSliderData","imagesSlider","titleBodyClass","titleItemClass","buttonItemClass","descriptionClass","descriptionTitleClass","titleType","sourceCodeLink","buttonSourceCodeText","websiteLink","buttonWebsiteText","descriptionTitle","Modal","languageDataModal","languageDataProjectData","stateModals","modals","InnerModalContainer","innerClass","closeButtonClass","searchBarModalStatus","searchBarModal","projectDetailsModalStatus","projectDetailsModal","modalCurrentClass","reducerIndexGroup","response","country","console","initialStateIndexGroup","App","indexGroupState","indexGroupDispatch","currentLanguageIndex","languageDataAPI","ModalContainer","querySelector","style","overflow","modal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.752fbecb.chunk.js","sourcesContent":["import React, {FC, useState, useEffect, useContext} from 'react';\nimport {dispatchIndexGroupContext, stateIndexGroupContext} from '../../../index';\nimport {stateCurrentPageContext, setStateCurrentPageContext} from '../../main/main';\n\ninterface NavbarTopMenuProps {\n  menuData: {\n    homeText: string,\n    projectsText: string\n  };\n}\n\nconst NavbarTopMenu: FC<NavbarTopMenuProps> = ({\n  menuData\n}) => {\n  const stateCurrentPage = useContext(stateCurrentPageContext);\n  const setStateCurrentPage = useContext(setStateCurrentPageContext);\n\n  function handlePage(page: string) {\n    setStateCurrentPage(page);\n  }\n\n  return (\n    <ul className=\"navbar-top__menu\">\n      <li className={`navbar-top__menu-item${stateCurrentPage === 'home' ? ' navbar-top__menu-item_active' : ''}`}\n        onClick={() => handlePage('home')}>{menuData.homeText}</li>\n      <li className={`navbar-top__menu-item${stateCurrentPage === 'projects' ? ' navbar-top__menu-item_active' : ''}`}\n        onClick={() => handlePage('projects')}>{menuData.projectsText}</li>\n    </ul>\n  );\n}\n\ninterface NavbarTopNightModeButtonProps {\n  nightModeData: {\n    lightText: string,\n    nightText: string\n  };\n}\n\nconst NavbarTopNightModeButton: FC<NavbarTopNightModeButtonProps> = ({\n  nightModeData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n  let NavbarTopNightModeIconContainer;\n\n  useEffect(() => {\n    const currentHour = new Date().getHours();\n\n    if(currentHour >= 5 && currentHour <= 17) {\n      dispatchIndexGroup({type: 'night-mode', newStateValue: false});\n    } else if(currentHour >= 0 && currentHour <= 4) {\n      dispatchIndexGroup({type: 'night-mode', newStateValue: true});\n    } else if(currentHour >= 18 && currentHour <= 23) {\n      dispatchIndexGroup({type: 'night-mode', newStateValue: true});\n    } else {\n      dispatchIndexGroup({type: 'night-mode', newStateValue: false});\n    }\n  }, [dispatchIndexGroup])\n\n  if(nightModeStatus) {\n    NavbarTopNightModeIconContainer = <>\n      <i className=\"fas fa-sun navbar-top__night-mode-icon\"></i>\n      {nightModeData.lightText}\n    </>\n  } else {\n    NavbarTopNightModeIconContainer = <>\n      <i className=\"fas fa-moon navbar-top__night-mode-icon\"></i>\n      {nightModeData.nightText}\n    </>\n  }\n\n  function handleNightModeStatus() {\n    dispatchIndexGroup({type: 'night-mode', newStateValue: !nightModeStatus});\n  }\n\n  return (\n    <button className=\"navbar-top__night-mode-button\" onClick={handleNightModeStatus}>\n      {NavbarTopNightModeIconContainer}\n    </button>\n  );\n}\n\ninterface NavbarTopSearchBarButtonProps {\n  searchBarButtonData: {\n    text: string\n  };\n}\n\nconst NavbarTopSearchBarButton: FC<NavbarTopSearchBarButtonProps> = ({\n  searchBarButtonData\n}) => {\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n\n  function handleSearchBarStatus() {\n    return dispatchIndexGroup({type: 'modal', modalName: 'search-bar'});\n  }\n\n  return (\n    <button className=\"navbar-top__search-bar-button\" onClick={handleSearchBarStatus}>\n      <i className=\"fas fa-search navbar-top__search-bar-icon\"></i>\n      {searchBarButtonData.text}\n    </button>\n  );\n}\n\ninterface NavbarTopLanguageSelectLanguages {\n  id: number,\n  imgSrc: string,\n  imgAlt: string,\n  text: string,\n  languageTag: string,\n  status: boolean\n}\n\ninterface NavbarTopLanguageSelectProps {\n  languageSelectData: {\n    defaultText: string,\n    languages: NavbarTopLanguageSelectLanguages[]\n  }\n}\n\nconst NavbarTopLanguageSelect: FC<NavbarTopLanguageSelectProps> = ({\n  languageSelectData\n}) => {\n  const [selectStatus, setSelectStatus] = useState(false)\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n  const currentLanguageTag = useContext(stateIndexGroupContext).currentLanguage;\n  const currentLanguageData: NavbarTopLanguageSelectLanguages =\n    languageSelectData.languages.filter(item => item.languageTag === currentLanguageTag)[0];\n  const selectCurrentOption = {...currentLanguageData, status: true};\n  let languageSelectTextContainer;\n\n  if(selectCurrentOption.status) {\n    languageSelectTextContainer = <>\n      <img src={selectCurrentOption.imgSrc} alt={selectCurrentOption.imgAlt} className=\"navbar-top__language-select-text-icon\"/>\n      {selectCurrentOption.text}\n    </>;\n  } else {\n    languageSelectTextContainer = languageSelectData.defaultText;\n  }\n\n  useEffect(() => {\n    if(selectStatus) {\n      function selectClickOutside(event: any) {\n        const currentTargetClass = event.target.classList.value.split(' ')[0];\n\n        if(currentTargetClass !== 'navbar-top__language-select-inner' &&\n        currentTargetClass !== 'navbar-top__language-select-text' &&\n        currentTargetClass !== 'navbar-top__language-select-icon' &&\n        currentTargetClass !== 'navbar-top__language-option' &&\n        currentTargetClass !== 'navbar-top__language-option-item' &&\n        currentTargetClass !== 'navbar-top__language-option-icon') {\n          setSelectStatus(false);\n        }\n      }\n    \n      document.addEventListener('click', selectClickOutside);\n      return () => document.removeEventListener('click', selectClickOutside);\n    }\n  }, [selectStatus]);\n\n  function handleLanguageSelectStatus() {\n    setSelectStatus(!selectStatus);\n  }\n\n  function handleLanguageOption(languageTag: string) {\n    dispatchIndexGroup({type: 'current-language', newStateValue: languageTag})\n    setSelectStatus(false);\n  }\n\n  return (\n    <div className=\"navbar-top__language-select\">\n      <div className=\"navbar-top__language-select-inner\" onClick={handleLanguageSelectStatus}>\n        <div className=\"navbar-top__language-select-inner-text\">\n          {languageSelectTextContainer}\n        </div>\n        <i className=\"fas fa-caret-down navbar-top__language-select-inner-icon\"></i>\n      </div>\n      {selectStatus &&\n        <ul className=\"navbar-top__language-option\">\n          {languageSelectData.languages.map(item => \n            <li className=\"navbar-top__language-option-item\" key={item.id}\n              onClick={() => handleLanguageOption(item.languageTag)}>\n              <img src={item.imgSrc} alt={item.imgAlt} className=\"navbar-top__language-option-icon\"/>\n              {item.text}\n            </li>)}\n        </ul>}\n    </div>\n  );\n}\n\ninterface NavbarTopLeftGroup {\n  languageDataNavbarTopLeftGroup: {\n    mainLogo: {\n      imgSrc: string,\n      imgAlt: string\n    },\n    menu: {\n      homeText: string,\n      projectsText: string\n    },\n    nightMode: {\n      lightText: string,\n      nightText: string\n    },\n    searchBarButton: {\n      text: string\n    },\n    languageSelect: {\n      defaultText: string,\n      languages: [\n        {\n          id: number,\n          imgSrc: string,\n          imgAlt: string,\n          text: string,\n          languageTag: string,\n          status: boolean\n        }\n      ]\n    }\n  }\n}\n\nexport const NavbarTopLeftGroup: FC<NavbarTopLeftGroup> = ({\n  languageDataNavbarTopLeftGroup\n}) => {\n  const mainLogoData = languageDataNavbarTopLeftGroup.mainLogo;\n  const menuData = languageDataNavbarTopLeftGroup.menu;\n  const nightModeData = languageDataNavbarTopLeftGroup.nightMode;\n  const searchBarButtonData = languageDataNavbarTopLeftGroup.searchBarButton;\n  const languageSelectData = languageDataNavbarTopLeftGroup.languageSelect;\n\n  return (\n    <section className=\"navbar-top__left-group\">\n      <img src={mainLogoData.imgSrc} alt={mainLogoData.imgAlt} className=\"navbar-top__logo\"/>\n      <NavbarTopMenu\n        menuData={menuData}/>\n      <NavbarTopNightModeButton\n        nightModeData={nightModeData}/>\n      <NavbarTopSearchBarButton\n        searchBarButtonData={searchBarButtonData}/>\n      <NavbarTopLanguageSelect\n        languageSelectData={languageSelectData}/>\n    </section>\n  );\n}\n\nexport default NavbarTopLeftGroup;","import React, {FC} from 'react';\n\nconst NavbarTopRightGroup: FC = () => {\n  return (\n    <section className=\"navbar-top__right-group\">\n      <div className=\"navbar-top__social-media\">\n        <a href=\"https://www.facebook.com/gleydsonjosedasilva\"\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-facebook-f navbar-top__social-media-icon\"></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/gleydson-jose-8600a2189\"\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-linkedin-in navbar-top__social-media-icon\"></i>\n        </a>\n        <a href=\"https://t.me/GleydsonJose\"\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-telegram-plane navbar-top__social-media-icon\"></i>\n        </a>\n        <a href=\"https://api.whatsapp.com/send?1=pt_BR&phone=55081988101515\"\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-whatsapp navbar-top__social-media-icon\"></i>\n        </a>\n        <a href=\"https://twitter.com/gleydsongst\"\n          className=\"navbar-top__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-twitter navbar-top__social-media-icon\"></i>\n        </a>\n      </div>\n    </section>\n  );\n}\n\nexport default NavbarTopRightGroup;","import React, {FC} from 'react';\nimport './navbar-top.css';\nimport NavbarTopLeftGroup from './components/navbar-top-left-group';\nimport NavbarTopRightGroup from './components/navbar-top-right-group';\n\ninterface NavbarTopProps {\n  languageDataNavbarTop: {};\n}\n\nconst NavbarTop: FC<NavbarTopProps> = ({\n  languageDataNavbarTop\n}) => {\n  return (\n    <nav className=\"navbar-top\">\n      <NavbarTopLeftGroup\n        languageDataNavbarTopLeftGroup={languageDataNavbarTop}/>\n      <NavbarTopRightGroup/>\n    </nav>\n  );\n}\n\nexport default NavbarTop;","import {useReducer} from 'react';\n\ninterface reducerSliderState {\n  currentNumProject: number;\n}\n\ninterface reducerSliderAction {\n  button: string;\n}\n\nfunction useSlider(projectsLength: number) {\n  function reducerSlider(state: reducerSliderState, action: reducerSliderAction) {\n    switch(action.button) {\n      case 'next':\n        if(state.currentNumProject < projectsLength-1) {\n          return {currentNumProject: state.currentNumProject + 1};\n        } else {\n          return {currentNumProject: state.currentNumProject};\n        }\n      case 'back':\n        if(state.currentNumProject > 0) {\n          return {currentNumProject: state.currentNumProject - 1};\n        } else {\n          return {currentNumProject: state.currentNumProject};\n        }\n      default:\n        throw new Error(\"This type don't exist!\");\n    }\n  }\n\n  const initialState: reducerSliderState = {currentNumProject: 0};\n  return useReducer(reducerSlider, initialState);\n}\n\nexport default useSlider;","import React, {FC, useState, useContext} from 'react';\nimport './my-favorite-projects.css';\nimport {stateIndexGroupContext} from '../../index';\nimport useSlider from '../../utils/sliderReducerHook';\n\ninterface MyFavoriteProjectsProjects {\n  id: number,\n  imgSrc: string,\n  imgAlt: string,\n  description: string\n}\n\ninterface MyFavoriteProjectsProps {\n  myFavoriteProjectsData: {\n    title: string,\n    projects: MyFavoriteProjectsProjects[]\n  };\n}\n\nconst MyFavoriteProjects: FC<MyFavoriteProjectsProps> = ({\n  myFavoriteProjectsData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const projects = myFavoriteProjectsData.projects;\n  const [state, dispatch] = useSlider(projects.length);\n  const titleClass = `my-favorite-projects__title${nightModeStatus ?\n    ' my-favorite-projects__title_night_mode' : ''}`;\n  const sliderClass = `my-favorite-projects__slider${nightModeStatus ?\n    ' my-favorite-projects__slider_night_mode' : ''}`;\n  const sliderDescriptionClass = `my-favorite-projects__slider-description${nightModeStatus ?\n    ' my-favorite-projects__slider-description_night_mode' : ''}`;\n  let sliderButtonBackClass = 'my-favorite-projects__slider-button';\n  let sliderButtonBackDisabled = false;\n  let sliderButtonNextClass = 'my-favorite-projects__slider-button';\n  let sliderButtonNextDisabled = false;\n  const [currentImageLoaded, setCurrentImageLoaded] = useState(false);\n\n  if(currentImageLoaded === false) {\n    sliderButtonBackClass+=' my-favorite-projects__slider-button_disabled';\n    sliderButtonBackDisabled = true;\n    sliderButtonNextClass+=' my-favorite-projects__slider-button_disabled';\n    sliderButtonNextDisabled = true;\n  } else {\n    switch(state.currentNumProject) {\n      case 0:\n        sliderButtonBackClass+=' my-favorite-projects__slider-button_disabled';\n        sliderButtonBackDisabled = true;\n        break;\n      case projects.length-1:\n        sliderButtonNextClass+=' my-favorite-projects__slider-button_disabled';\n        sliderButtonNextDisabled = true;\n        break;\n      default:\n        sliderButtonBackClass = 'my-favorite-projects__slider-button';\n        sliderButtonBackDisabled = false;\n        sliderButtonNextClass = 'my-favorite-projects__slider-button';\n        sliderButtonNextDisabled = false;\n    }\n  }\n\n  function handleCurrentImageLoaded() {\n    setCurrentImageLoaded(true);\n  }\n\n  function clickSliderBtnBack() {\n    dispatch({button: 'back'});\n    setCurrentImageLoaded(false);\n  }\n\n  function clickSliderBtnNext() {\n    dispatch({button: 'next'});\n    setCurrentImageLoaded(false);\n  }\n\n  return (\n    <section className=\"my-favorite-projects\">\n      <h1 className={titleClass}>\n        <i className=\"fas fa-star my-favorite-projects__title-icon\"></i>\n        {myFavoriteProjectsData.title}\n      </h1>\n      <div className={sliderClass}>\n        <img src={projects[state.currentNumProject].imgSrc}\n          alt={projects[state.currentNumProject].imgAlt}\n          className=\"my-favorite-projects__slider_image\"\n          onLoad={handleCurrentImageLoaded}/>\n        <div className=\"my-favorite-projects__slider-btngroup\">\n          <button className={sliderButtonBackClass}\n            onClick={clickSliderBtnBack}\n            disabled={sliderButtonBackDisabled}>\n            <i className=\"fas fa-chevron-left my-favorite-projects__slider-icon\"></i>\n          </button>\n          {currentImageLoaded === false &&\n            <img src=\"./images/loaders/loader.svg\" alt=\"Loader\"\n              className=\"my-favorite-projects__slider-loader\"/>}\n          <button className={sliderButtonNextClass}\n            onClick={clickSliderBtnNext}\n            disabled={sliderButtonNextDisabled}>\n            <i className=\"fas fa-chevron-right my-favorite-projects__slider-icon\"></i>\n          </button>\n        </div>\n        <p className={sliderDescriptionClass}>\n          {projects[state.currentNumProject].description}\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default MyFavoriteProjects;","import React, {FC, useContext} from 'react';\nimport './about-me.css';\nimport {stateIndexGroupContext} from '../../index';\n\ninterface AboutMeProps {\n  aboutMeData: {\n    title: string,\n    text: string\n  }\n}\n\nconst AboutMe: FC<AboutMeProps> = ({\n  aboutMeData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const titleClass = `about-me__title${nightModeStatus ? ' about-me__title_night_mode' : ''}`;\n  const textClass = `about-me__text${nightModeStatus ? ' about-me__text_night_mode' : ''}`;\n\n  return (\n    <section className=\"about-me\">\n      <h1 className={titleClass}>\n        <i className=\"fas fa-scroll about-me__title-icon\"></i>\n        {aboutMeData.title}\n      </h1>\n      <p className={textClass}>{aboutMeData.text}</p>\n    </section>\n  );\n}\n\nexport default AboutMe;","import React, {FC, useContext} from 'react';\nimport './tools-i-currently-use.css';\nimport {stateIndexGroupContext} from '../../index';\n\ninterface ToolsICurrentlyUseTools {\n  id: number,\n  imgSrc: string,\n  imgAlt: string,\n  title: string\n}\n\ninterface ToolsICurrentlyUseProps {\n  toolsICurrentlyUseData: {\n    title: string,\n    tools: [ToolsICurrentlyUseTools],\n    map?<U>(\n      callbackfn: (\n        value: ToolsICurrentlyUseTools,\n        index: number,\n        array: ToolsICurrentlyUseTools[]\n      ) => U,\n      thisArg?: any\n    ): U[];\n  }\n}\n\nconst ToolsICurrentlyUse: FC<ToolsICurrentlyUseProps> = ({\n  toolsICurrentlyUseData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const titleClass = `tools-i-currently-use__title${nightModeStatus ?\n    ' tools-i-currently-use__title_night_mode' : ''}`;\n\n  return (\n    <section className=\"tools-i-currently-use\">\n      <h1 className={titleClass}>\n        <i className=\"fas fa-tools tools-i-currently-use__title-icon\"></i>\n        {toolsICurrentlyUseData.title}\n      </h1>\n      <div className=\"tools-i-currently-use__tools-group\">\n        {toolsICurrentlyUseData.tools.map(item =>\n          <img src={item.imgSrc} alt={item.imgAlt}\n            className=\"tools-i-currently-use__tools-item\"\n            title={item.title} key={item.id}/>)}\n      </div>\n    </section>\n  );\n}\n\nexport default ToolsICurrentlyUse;","import React, {FC, useContext} from 'react';\nimport './tools-i-have-used.css';\nimport {stateIndexGroupContext} from '../../index';\n\ninterface ToolsIHaveUsedTools {\n  id: number,\n  imgSrc: string,\n  imgAlt: string,\n  title: string\n}\n\ninterface ToolsIHaveUsedProps {\n  toolsIHaveUsedData: {\n    title: string,\n    tools: [ToolsIHaveUsedTools],\n    map?<U>(\n      callbackfn: (\n        value: ToolsIHaveUsedTools,\n        index: number,\n        array: ToolsIHaveUsedTools[]\n      ) => U,\n      thisArg?: any\n    ): U[];\n  }\n}\n\nconst ToolsIHaveUsed: FC<ToolsIHaveUsedProps> = ({\n  toolsIHaveUsedData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const titleClass = `tools-i-have-used__title${nightModeStatus ?\n    ' tools-i-have-used__title_night_mode' : ''}`;\n\n  return (\n    <section className=\"tools-i-have-used\">\n      <h1 className={titleClass}>\n        <i className=\"fas fa-toolbox tools-i-have-used__title-icon\"></i>\n        {toolsIHaveUsedData.title}\n      </h1>\n      <div className=\"tools-i-have-used__tools-group\">\n        {toolsIHaveUsedData.tools.map(item =>\n          <img src={item.imgSrc} alt={item.imgAlt}\n            className=\"tools-i-have-used__tools-item\"\n            title={item.title} key={item.id}/>)}\n      </div>\n    </section>\n  );\n}\n\nexport default ToolsIHaveUsed;","import React, {FC, useState, useEffect, useContext} from 'react';\nimport './my-github.css';\nimport {stateIndexGroupContext} from '../../index';\n\ninterface MyGitHubProps {\n  myGitHubData: {\n    title: string,\n    imgAlt: string,\n    repositoriesTitle: string\n  }\n}\n\nconst MyGitHub: FC<MyGitHubProps> = ({\n  myGitHubData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const titleClass = `my-github__title${nightModeStatus ?\n    ' my-github__title_night_mode' : ''}`;\n  const detailsClass = `my-github__details${nightModeStatus ?\n    ' my-github__details_night_mode' : ''}`;\n  const [gitHubData, setGitHubData] = useState({profileImg: '', repositoriesTotal: 0});\n  \n  useEffect(() => {\n    fetch('https://api.github.com/users/satuctkode')\n    .then((data) => {\n      data.json().then((json) => {\n        setGitHubData({\n          profileImg: json.avatar_url,\n          repositoriesTotal: json.public_repos\n        });\n      })\n    })\n    .catch((error) => {\n      throw new Error(error);\n    })\n  }, [])\n\n  return (\n    <section className=\"my-github\">\n      <h1 className={titleClass}>\n        <i className=\"fab fa-github my-github__title-icon\"></i>\n        {myGitHubData.title}\n      </h1>\n      <div className={detailsClass}>\n        <img src={gitHubData.profileImg} alt={myGitHubData.imgAlt} className=\"my-github__profile-img\"/>\n        <div className=\"my-github__repositories\">\n          <h1 className=\"my-github__repositories-title\">{myGitHubData.repositoriesTitle}</h1>\n          <p className=\"my-github__repositories-total\">{gitHubData.repositoriesTotal}</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default MyGitHub;","import React, {FC} from 'react';\nimport MyFavoriteProjects from '../my-favorite-projects/my-favorite-projects';\nimport AboutMe from '../about-me/about-me';\nimport ToolsICurrentlyUse from '../tools-i-currently-use/tools-i-currently-use';\nimport ToolsIHaveUsed from '../tools-i-have-used/tools-i-have-used';\nimport MyGitHub from '../my-github/my-github';\nimport './home.css';\n\ninterface HomeProps {\n  languageDataHome: {\n    myFavoriteProjects: {\n      title: string,\n      projects: {\n        id: number,\n        imgSrc: string,\n        imgAlt: string,\n        description: string\n      }[]\n    },\n    aboutMe: {\n      title: string,\n      text: string\n    },\n    toolsICurrentlyUse: {\n      title: string,\n      tools: [\n        {\n          id: number,\n          imgSrc: string,\n          imgAlt: string,\n          title: string\n        }\n      ]\n    },\n    toolsIHaveUsed: {\n      title: string,\n      tools: [\n        {\n          id: number,\n          imgSrc: string,\n          imgAlt: string,\n          title: string\n        }\n      ]\n    },\n    myGitHub: {\n      title: string,\n      imgAlt: string,\n      repositoriesTitle: string\n    }\n  }\n}\n\nconst Home: FC<HomeProps> = ({\n  languageDataHome\n}) => {\n  return (\n    <section className=\"home\">\n      <MyFavoriteProjects\n        myFavoriteProjectsData={languageDataHome.myFavoriteProjects}/>\n      <AboutMe\n        aboutMeData={languageDataHome.aboutMe}/>\n      <ToolsICurrentlyUse\n        toolsICurrentlyUseData={languageDataHome.toolsICurrentlyUse}/>\n      <ToolsIHaveUsed\n        toolsIHaveUsedData={languageDataHome.toolsIHaveUsed}/>\n      <MyGitHub\n        myGitHubData={languageDataHome.myGitHub}/>\n    </section>\n  );\n}\n\nexport default Home;","import React, {FC} from 'react';\nimport './alert.css';\n\ninterface AlertProps {\n  alertData: {\n    text: string;\n    linkText: string;\n  }\n}\n\nconst Alert: FC<AlertProps> = ({\n  alertData\n}) => {\n  return (\n    <div className=\"alert\">\n      <p className=\"alert__text\">{alertData.text} <a href=\"https://github.com/satuctkode?tab=repositories\" className=\"alert__link\" target=\"_blank\" rel=\"noopener noreferrer\">{alertData.linkText}</a></p>\n    </div>\n  );\n}\n\nexport default Alert;","import React, {FC, useContext} from 'react';\nimport './customer-projects.css';\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\n\ninterface CustomerProjectsProjectsData {\n  id: number;\n  name: string;\n  type: string;\n  titleType: string;\n  sourceCodeLink: string;\n  websiteLink: string;\n  imgSrc: string;\n  imgAlt: string;\n  description: string;\n  imagesSlider: [\n    {\n      id: number,\n      imgSrc: string,\n      imgAlt: string\n    }\n  ];\n}\n\ninterface CustomerProjectsProps {\n  customerProjectsData: {\n    title: string,\n    buttonText: string\n  };\n  projectsData: CustomerProjectsProjectsData[];\n}\n\nconst CustomerProjects: FC<CustomerProjectsProps> = ({\n  customerProjectsData, projectsData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n  const titleClass = `customer-projects__title${nightModeStatus ?\n    ' customer-projects__title_night_mode' : ''}`;\n\n  function openProjectsDetailsModal(productData: CustomerProjectsProjectsData) {\n    dispatchIndexGroup({type: 'project-details-data', newStateValue: productData});\n    dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\n  }\n\n  return (\n    <section className=\"customer-projects\">\n      <h1 className={titleClass}>\n        <i className=\"fas fa-users customer-projects__title-icon\"></i>\n        {customerProjectsData.title}\n      </h1>\n      <section className=\"customer-projects__items-group\">\n        {projectsData.map(item => \n          <div className=\"customer-projects__item\" key={item.id}>\n            <img src={item.imgSrc} alt={item.imgAlt} className=\"customer-projects__image\"/>\n            <button className=\"customer-projects__button\"\n              onClick={() => openProjectsDetailsModal(item)}>\n              <i className=\"fas fa-eye customer-projects__button-icon\"></i>\n              {customerProjectsData.buttonText}\n            </button>\n          </div>)}\n      </section>\n    </section>\n  );\n}\n\nexport default CustomerProjects;","import React, {FC, useContext} from 'react';\nimport './my-projects.css';\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\n\ninterface MyProjectsProjectsData {\n  id: number;\n  name: string;\n  type: string;\n  titleType: string;\n  sourceCodeLink: string;\n  websiteLink: string;\n  imgSrc: string;\n  imgAlt: string;\n  description: string;\n  imagesSlider: [\n    {\n      id: number,\n      imgSrc: string,\n      imgAlt: string\n    }\n  ];\n}\n\ninterface MyProjectsProps {\n  myProjectsData: {\n    title: string,\n    buttonText: string\n  };\n  projectsData: MyProjectsProjectsData[];\n}\n\nconst MyProjects: FC<MyProjectsProps> = ({\n  myProjectsData, projectsData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n  const titleClass = `my-projects__title${nightModeStatus ?\n    ' my-projects__title_night_mode' : ''}`;\n\n  function openProjectsDetailsModal(productData: MyProjectsProjectsData) {\n    dispatchIndexGroup({type: 'project-details-data', newStateValue: productData});\n    dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\n  }\n\n  return (\n    <section className=\"my-projects\">\n      <h1 className={titleClass}>\n        <i className=\"fas fa-project-diagram my-projects__title-icon\"></i>\n        {myProjectsData.title}\n      </h1>\n      <section className=\"my-projects__items-group\">\n        {projectsData.map!(item => \n          <div className=\"my-projects__item\" key={item.id}>\n            <img src={item.imgSrc} alt={item.imgAlt} className=\"my-projects__image\"/>\n            <button className=\"my-projects__button\"\n              onClick={() => openProjectsDetailsModal(item)}>\n              <i className=\"fas fa-eye my-projects__button-icon\"></i>\n              {myProjectsData.buttonText}\n            </button>\n          </div>)}\n      </section>\n    </section>\n  );\n}\n\nexport default MyProjects;","import React, {FC} from 'react';\nimport Alert from '../alert/alert';\nimport CustomerProjects from '../customer-projects/customer-projects';\nimport MyProjects from '../my-projects/my-projects';\nimport './projects.css';\n\ninterface ProjectsProps {\n  languageDataProjects: {\n    alert: {\n      text: string;\n      linkText: string;\n    },\n    customerProjects: {\n      title: string,\n      buttonText: string\n    },\n    myProjects: {\n      title: string;\n      buttonText: string;\n    }\n  };\n  languageDataProjectsData: [\n    {\n      id: number,\n      name: string,\n      type: string,\n      titleType: string,\n      sourceCodeLink: string,\n      websiteLink: string,\n      imgSrc: string,\n      imgAlt: string,\n      description: string,\n      imagesSlider: [\n        {\n          id: number,\n          imgSrc: string,\n          imgAlt: string\n        }\n      ]\n    }\n  ];\n}\n\nconst Projects: FC<ProjectsProps> = ({\n  languageDataProjects, languageDataProjectsData\n}) => {\n  const customerProjects = languageDataProjectsData.filter(item => item.type === 'customerProjects' && item);\n  const myProjects = languageDataProjectsData.filter(item => item.type === 'myProjects' && item);\n\n  return (\n    <section className=\"projects\">\n      <Alert\n        alertData={languageDataProjects.alert}/>\n      <CustomerProjects\n        customerProjectsData={languageDataProjects.customerProjects}\n        projectsData={customerProjects}/>\n      <MyProjects\n        myProjectsData={languageDataProjects.myProjects}\n        projectsData={myProjects}/>\n    </section>\n  );\n}\n\nexport default Projects;","import React, {FC} from 'react';\nimport './footer.css';\n\ninterface FooterProps {\n  languageDataFooter: {\n    title: string;\n  }\n}\n\nconst Footer: FC<FooterProps> = ({\n  languageDataFooter\n}) => {\n  return (\n    <footer className=\"footer\">\n      <h1 className=\"footer__title\">{languageDataFooter.title}</h1>\n      <div className=\"footer__social-media\">\n        <a href=\"https://www.facebook.com/gleydsonjosedasilva\"\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-facebook-f footer__social-media-icon\"></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/gleydson-jose-8600a2189/\"\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-linkedin-in footer__social-media-icon\"></i>\n        </a>\n        <a href=\"https://t.me/GleydsonJose\"\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-telegram-plane footer__social-media-icon\"></i>\n        </a>\n        <a href=\"https://api.whatsapp.com/send?1=pt_BR&phone=55081988101515\"\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-whatsapp footer__social-media-icon\"></i>\n        </a>\n        <a href=\"https://twitter.com/gleydsongst\"\n          className=\"footer__social-media-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-twitter footer__social-media-icon\"></i>\n        </a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, {FC, useState, createContext, useContext} from 'react';\nimport './main.css';\nimport NavbarTop from '../navbar-top/navbar-top';\nimport Home from '../home/home';\nimport Projects from  '../projects/projects';\nimport Footer from '../footer/footer';\nimport {stateIndexGroupContext} from '../../index';\n\nexport const stateCurrentPageContext = createContext('');\nexport const setStateCurrentPageContext = createContext<Function>(() => false);\n\ninterface MainProps {\n  languageData: {\n    home: {\n      myFavoriteProjects: {\n        title: string,\n        projects: {\n          id: number,\n          imgSrc: string,\n          imgAlt: string,\n          description: string\n        }[]\n      },\n      aboutMe: {\n        title: string,\n        text: string\n      },\n      toolsICurrentlyUse: {\n        title: string,\n        tools: [\n          {\n            id: number,\n            imgSrc: string,\n            imgAlt: string,\n            title: string\n          }\n        ]\n      },\n      toolsIHaveUsed: {\n        title: string,\n        tools: [\n          {\n            id: number,\n            imgSrc: string,\n            imgAlt: string,\n            title: string\n          }\n        ]\n      },\n      myGitHub: {\n        title: string,\n        imgAlt: string,\n        repositoriesTitle: string\n      }\n    },\n    modal: {},\n    navbarTop: {\n      mainLogo: {},\n      menu: {},\n      nightMode: {},\n      searchBarButton: {},\n      languageSelect: {}\n    },\n    projects: {\n      alert: {\n        text: string;\n        linkText: string;\n      },\n      customerProjects: {\n        title: string,\n        buttonText: string\n      },\n      myProjects: {\n        title: string,\n        buttonText: string\n      }\n    },\n    projectsData: [\n      {\n        id: number,\n        name: string,\n        type: string,\n        titleType: string,\n        sourceCodeLink: string,\n        websiteLink: string,\n        imgSrc: string,\n        imgAlt: string,\n        description: string,\n        imagesSlider: [\n          {\n            id: number,\n            imgSrc: string,\n            imgAlt: string\n          }\n        ]\n      }\n    ],\n    footer: {\n      title: string;\n    }\n  };\n}\n\nconst Main: FC<MainProps> = ({\n  languageData\n}) => {\n  const [currentPage, setCurrentPage] = useState('home');\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const mainClass = `main${nightModeStatus ? ' main_night_mode': ''}`;\n  let currentPageContainer: unknown = '';\n\n  switch(currentPage) {\n    case 'home':\n      currentPageContainer =\n        <Home languageDataHome={languageData.home}/>;\n      break;\n    case 'projects':\n      currentPageContainer =\n        <Projects languageDataProjects={languageData.projects}\n          languageDataProjectsData={languageData.projectsData}/>;\n      break;\n    default:\n      currentPageContainer = '';\n      break;\n  }\n\n  return (\n    <main className={mainClass}>\n      <setStateCurrentPageContext.Provider value={setCurrentPage}>\n        <stateCurrentPageContext.Provider value={currentPage}>\n          <NavbarTop\n            languageDataNavbarTop={languageData.navbarTop}/>\n        </stateCurrentPageContext.Provider>\n      </setStateCurrentPageContext.Provider>\n      {currentPageContainer}\n      <Footer\n        languageDataFooter={languageData.footer}/>\n    </main>\n  );\n}\n\nexport default Main;","import React, {FC, useState, useEffect, useContext, useRef, MouseEvent, ChangeEvent} from 'react';\nimport './search-bar-modal.css';\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\n\ninterface SearchBarModalProjectsData {\n  id: number,\n  name: string,\n  type: string,\n  titleType: string,\n  sourceCodeLink: string,\n  websiteLink: string,\n  imgSrc: string,\n  imgAlt: string,\n  description: string,\n  imagesSlider: [\n    {\n      id: number,\n      imgSrc: string,\n      imgAlt: string\n    }\n  ]\n}\n\ninterface SearchBarModalProps {\n  searchBarModalData: {\n    inputPlaceholder: string\n  };\n  projectsData: SearchBarModalProjectsData[];\n}\n\nconst SearchBarModal: FC<SearchBarModalProps> = ({\n  searchBarModalData, projectsData\n}) => {\n  const [searchBarStateValue, setSearchBarStateValue] = useState('');\n  const [newSearchBarProjectsList, setNewSearchBarProjectsList] = useState<SearchBarModalProjectsData[]>([]);\n  const [searchBarSubmitStatus, setSearchBarSubmitStatus] = useState<boolean>(false);\n  const [searchBarDataChosen, setSearchBarDataChosen] = useState<SearchBarModalProjectsData>();\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const searchBarRef = useRef<HTMLInputElement>(null);\n  const inputClass = `search-bar-modal__input${nightModeStatus ?\n    ' search-bar-modal__input_night_mode' : ''}`;\n  let submitButtonClass = 'search-bar-modal__submit-button';\n  const listClass = `search-bar-modal__list${nightModeStatus ?\n    ' search-bar-modal__list_night_mode' : ''}`;\n\n  if(nightModeStatus) {\n    if(searchBarSubmitStatus) {\n      submitButtonClass = `search-bar-modal__submit-button\n        search-bar-modal__submit-button_night_mode`;\n    } else {\n      submitButtonClass = `search-bar-modal__submit-button \n        search-bar-modal__submit-button_night_mode\n        search-bar-modal__submit-button_night_mode-btn-disabled`;\n    }\n  } else {\n    if(searchBarSubmitStatus) {\n      submitButtonClass = 'search-bar-modal__submit-button';\n    } else {\n      submitButtonClass = 'search-bar-modal__submit-button search-bar-modal__submit-button_disabled';\n    }\n  }\n\n  useEffect(() => {\n    searchBarRef.current!.focus();\n  }, [])\n\n  function searchProjects(event: ChangeEvent<HTMLInputElement>) {\n    const searchBarEventValue = event.target.value;\n    const searchBarRegex = new RegExp(`^${searchBarEventValue}`, 'i');\n    let searchBarDataFound = projectsData.filter!(item => searchBarRegex.test(item.name) && item.name);\n\n    if(searchBarDataFound.length === 1 && searchBarDataFound[0].name === searchBarEventValue) {\n      setSearchBarDataChosen(searchBarDataFound[0]);\n      setSearchBarSubmitStatus(true);\n      searchBarDataFound = [];\n    } else {\n      setSearchBarDataChosen(undefined);\n      setSearchBarSubmitStatus(false);\n      dispatchIndexGroup({type: 'project-details-data', newStateValue: {}});\n    }\n\n    if(searchBarEventValue.length > 0) {\n      setNewSearchBarProjectsList(searchBarDataFound);\n    } else {\n      setNewSearchBarProjectsList([]);\n    }\n\n    setSearchBarStateValue(searchBarEventValue);\n  }\n\n  function submitData(event: MouseEvent) {\n    event.preventDefault();\n    dispatchIndexGroup({type: 'modal', modalName: 'search-bar'});\n    dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\n    dispatchIndexGroup({type: 'project-details-data', newStateValue: searchBarDataChosen});\n  }\n\n  function selectProject(projectData: SearchBarModalProjectsData) {\n    setSearchBarStateValue(projectData.name);\n    setNewSearchBarProjectsList([]);\n    setSearchBarDataChosen(projectData);\n    setSearchBarSubmitStatus(true);\n    searchBarRef.current!.focus();\n  }\n\n  return (\n    <section className=\"search-bar-modal\">\n      <form className=\"search-bar-modal__form\" method=\"POST\">\n        <input type=\"search\" placeholder={searchBarModalData.inputPlaceholder} className={inputClass} value={searchBarStateValue}\n          onChange={searchProjects} ref={searchBarRef}\n          maxLength={50}/>\n        <button type=\"submit\" className={submitButtonClass} onClick={submitData}\n          disabled={searchBarSubmitStatus === false && true}>\n          <i className=\"fas fa-search search-bar-modal__submit-icon\"></i>\n        </button>\n      </form>\n      {newSearchBarProjectsList.length > 0 &&\n        <ul className={listClass}>\n          {newSearchBarProjectsList.map(item =>\n            <li className=\"search-bar-modal__item\" key={item.id} onClick={() => selectProject(item)}>{item.name}</li>)}\n        </ul>}\n    </section>\n  );\n}\n\nexport default SearchBarModal;","import React, {FC, useState, useContext} from 'react';\nimport './project-details-modal.css';\nimport {stateIndexGroupContext} from '../../index';\nimport useSlider from '../../utils/sliderReducerHook';\n\ninterface ProjectDetailsData {\n  id: number;\n  name: string;\n  type: string;\n  titleType: string;\n  sourceCodeLink: string;\n  websiteLink: string;\n  imgSrc: string;\n  imgAlt: string;\n  description: string;\n  imagesSlider: [\n    {\n      id: number,\n      imgSrc: string,\n      imgAlt: string\n    }\n  ];\n}\n\ninterface ProjectDetailsModalProps {\n  projectDetailsModalData: {\n    buttonSourceCodeText: string,\n    buttonWebsiteText: string,\n    descriptionTitle: string\n  };\n}\n\nconst ProjectDetailsModal: FC<ProjectDetailsModalProps> = ({\n  projectDetailsModalData\n}) => {\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const projectDetailsData: ProjectDetailsData = useContext(stateIndexGroupContext).projectDetailsData;\n  const projectDetailsSliderData = projectDetailsData.imagesSlider;\n  const [state, dispatch] = useSlider(projectDetailsSliderData.length);\n  const titleBodyClass = `project-details-modal__title-body${nightModeStatus ?\n    ' project-details-modal__title-body_night_mode' : ''}`;\n  const titleItemClass = `project-details-modal__title-item${nightModeStatus ?\n    ' project-details-modal__title-item_night_mode' : ''}`;\n  const sliderClass = `project-details-modal__slider${nightModeStatus ?\n    ' project-details-modal__slider_night_mode' : ''}`;\n  const buttonItemClass = `project-details-modal__button-item${nightModeStatus ?\n    ' project-details-modal__button-item_night_mode' : ''}`;\n  const descriptionClass = `project-details-modal__description${nightModeStatus ?\n    ' project-details-modal__description_night_mode' : ''}`;\n  const descriptionTitleClass = `project-details-modal__description-title${nightModeStatus ?\n    ' project-details-modal__description-title_night_mode' : ''}`;\n  let sliderButtonBackClass = 'project-details-modal__slider-button';\n  let sliderButtonBackDisabled = false;\n  let sliderButtonNextClass = 'project-details-modal__slider-button';\n  let sliderButtonNextDisabled = false;\n  const [currentImageLoaded, setCurrentImageLoaded] = useState(false);\n\n  if(currentImageLoaded === false) {\n    sliderButtonBackClass+=' project-details-modal__slider-button_disabled';\n    sliderButtonBackDisabled = true;\n    sliderButtonNextClass+=' project-details-modal__slider-button_disabled';\n    sliderButtonNextDisabled = true;\n  } else {\n    switch(state.currentNumProject) {\n      case 0:\n        sliderButtonBackClass+=' project-details-modal__slider-button_disabled';\n        sliderButtonBackDisabled = true;\n        break;\n      case projectDetailsSliderData.length-1:\n        sliderButtonNextClass+=' project-details-modal__slider-button_disabled';\n        sliderButtonNextDisabled = true;\n        break;\n      default:\n        sliderButtonBackClass = 'project-details-modal__slider-button';\n        sliderButtonBackDisabled = false;\n        sliderButtonNextClass = 'project-details-modal__slider-button';\n        sliderButtonNextDisabled = false;\n    }\n  }\n\n  function handleCurrentImageLoaded() {\n    setCurrentImageLoaded(true);\n  }\n\n  function clickSliderBtnBack() {\n    dispatch({button: 'back'});\n    setCurrentImageLoaded(false);\n  }\n\n  function clickSliderBtnNext() {\n    dispatch({button: 'next'});\n    setCurrentImageLoaded(false);\n  }\n\n  return (\n    <section className=\"project-details-modal\">\n      <div className={titleBodyClass}>\n        <i className=\"fas fa-project-diagram project-details-modal__title-icon\"></i>\n        <p className=\"project-details-modal__title-inner\">\n          <span className={titleItemClass}>{projectDetailsData.titleType}</span>\n          <span className={titleItemClass}>{projectDetailsData.name}</span>\n        </p>\n      </div>\n      <div className={sliderClass}>\n        <img src={projectDetailsSliderData[state.currentNumProject].imgSrc}\n          alt={projectDetailsSliderData[state.currentNumProject].imgAlt}\n          className=\"project-details-modal__slider_image\"\n          onLoad={handleCurrentImageLoaded}/>\n        <div className=\"project-details-modal__slider-btngroup\">\n          <button className={sliderButtonBackClass}\n            onClick={clickSliderBtnBack}\n            disabled={sliderButtonBackDisabled}>\n            <i className=\"fas fa-chevron-left project-details-modal__slider-icon\"></i>\n          </button>\n          {currentImageLoaded === false &&\n            <img src=\"./images/loaders/loader.svg\" alt=\"Loader\"\n              className=\"project-details-modal-projects__slider-loader\"/>}\n          <button className={sliderButtonNextClass}\n            onClick={clickSliderBtnNext}\n            disabled={sliderButtonNextDisabled}>\n            <i className=\"fas fa-chevron-right project-details-modal__slider-icon\"></i>\n          </button>\n        </div>\n      </div>\n      <div className=\"project-details-modal__button-group\">\n        {projectDetailsData.type !== 'customerProjects' &&\n          <a href={projectDetailsData.sourceCodeLink} className={buttonItemClass}\n            target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-code project-details-modal__button-icon\"></i>\n            {projectDetailsModalData.buttonSourceCodeText}\n          </a>}\n        <a href={projectDetailsData.websiteLink} className={buttonItemClass}\n          target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fas fa-external-link-alt project-details-modal__button-icon\"></i>\n          {projectDetailsModalData.buttonWebsiteText}\n        </a>\n      </div>\n      <div className={descriptionClass}>\n        <h1 className={descriptionTitleClass}>\n          <i className=\"fas fa-file-alt project-details-modal__description-title-icon\"></i>\n          {projectDetailsModalData.descriptionTitle}\n        </h1>\n        <p className=\"project-details-modal__description-text\">\n          {projectDetailsData.description}\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default ProjectDetailsModal;","import React, {FC, useContext} from 'react';\nimport './modal.css';\nimport SearchBarModal from '../search-bar-modal/search-bar-modal';\nimport ProjectDetailsModal from '../project-details-modal/project-details-modal';\nimport {stateIndexGroupContext, dispatchIndexGroupContext} from '../../index';\n\ninterface ModalProps {\n  languageDataModal: {\n    searchBarModal: {\n      inputPlaceholder: string\n    },\n    projectDetailsModal: {\n      buttonSourceCodeText: string,\n      buttonWebsiteText: string,\n      descriptionTitle: string\n    }\n  };\n  languageDataProjectData: [\n    {\n      id: number,\n      name: string,\n      type: string,\n      titleType: string,\n      sourceCodeLink: string,\n      websiteLink: string,\n      imgSrc: string,\n      imgAlt: string,\n      description: string,\n      imagesSlider: [\n        {\n          id: number,\n          imgSrc: string,\n          imgAlt: string\n        }\n      ]\n    }\n  ];\n}\n\nconst Modal: FC<ModalProps> = ({\n  languageDataModal, languageDataProjectData\n}) => {\n  const stateModals = useContext(stateIndexGroupContext).modals;\n  const nightModeStatus = useContext(stateIndexGroupContext).nightModeStatus;\n  const dispatchIndexGroup = useContext(dispatchIndexGroupContext);\n  let InnerModalContainer: any = '';\n  const innerClass = `modal__inner${nightModeStatus ? ' modal__inner_night_mode' : ''}`;\n  const closeButtonClass = `fas fa-times modal__close-button${nightModeStatus ?\n    ' modal__close-button_night_mode' : ''}`;\n\n  if(stateModals.searchBarModalStatus) {\n    InnerModalContainer =\n      <SearchBarModal\n        searchBarModalData={languageDataModal.searchBarModal}\n        projectsData={languageDataProjectData}/>;\n  } else if(stateModals.projectDetailsModalStatus) {\n    InnerModalContainer =\n      <ProjectDetailsModal\n        projectDetailsModalData={languageDataModal.projectDetailsModal}/>\n  } else {\n    InnerModalContainer = '';\n  }\n\n  function closeModal(event: any) {\n    const modalCurrentClass = event.target.classList.value.split(' ');\n     \n    if(modalCurrentClass[0] === 'modal' ||\n      modalCurrentClass[2] === 'modal__close-button') {\n      if(stateModals.searchBarModalStatus) {\n        dispatchIndexGroup({type: 'modal', modalName: 'search-bar'});\n        dispatchIndexGroup({type: 'project-details-data', newStateValue: {}});\n      } else if (stateModals.projectDetailsModalStatus) {\n        dispatchIndexGroup({type: 'modal', modalName: 'project-details'});\n        dispatchIndexGroup({type: 'project-details-data', newStateValue: {}});\n      }\n    }\n  }\n\n  return (\n    <section className={`modal${stateModals.projectDetailsModalStatus ? ' modal_big_size' : ''}`}\n      onClick={closeModal}>\n      <div className={innerClass}>\n        <div className=\"modal__first-group\">\n          <i className={closeButtonClass}></i>\n        </div>\n        <div className=\"modal__last-group\">\n          {InnerModalContainer}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Modal;","import React, { useReducer, createContext } from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport Main from './blocks/main/main';\nimport Modal from './blocks/modal/modal';\nimport languageDataAPI from './api/languageData.json';\nfunction reducerIndexGroup(state, action) {\n    switch (action.type) {\n        case 'modal':\n            switch (action.modalName) {\n                case 'search-bar':\n                    return {\n                        ...state,\n                        modals: {\n                            ...state.modals,\n                            searchBarModalStatus: !state.modals.searchBarModalStatus\n                        }\n                    };\n                case 'project-details':\n                    return {\n                        ...state,\n                        modals: {\n                            ...state.modals,\n                            projectDetailsModalStatus: !state.modals.projectDetailsModalStatus\n                        }\n                    };\n                default:\n                    throw new Error(\"This modal don't exist!\");\n            }\n        case 'project-details-data':\n            return { ...state, projectDetailsData: action.newStateValue };\n        case 'current-language':\n            return { ...state, currentLanguage: action.newStateValue };\n        case 'night-mode':\n            return { ...state, nightModeStatus: action.newStateValue };\n        default:\n            throw new Error(\"This component isn't allowed!\");\n    }\n}\nlet currentLanguage = 'en';\nfetch('https://ipinfo.io').then(response => {\n    response.json().then(json => {\n        if (json.country === 'BR') {\n            currentLanguage = 'ptbr';\n        }\n        else {\n            currentLanguage = 'en';\n        }\n    }).catch(error => {\n        currentLanguage = 'en';\n        console.error(\"Error with ipinfo json\");\n    });\n}).catch(error => {\n    console.error(\"Error with ipinfo\");\n});\nconst initialStateIndexGroup = {\n    modals: {\n        searchBarModalStatus: false,\n        projectDetailsModalStatus: false\n    },\n    projectDetailsData: {\n        id: 0,\n        name: '',\n        type: '',\n        titleType: '',\n        sourceCodeLink: '',\n        websiteLink: '',\n        imgSrc: '',\n        imgAlt: '',\n        description: '',\n        imagesSlider: [\n            {\n                id: 0,\n                imgSrc: '',\n                imgAlt: ''\n            }\n        ]\n    },\n    currentLanguage,\n    nightModeStatus: false\n};\nexport const stateIndexGroupContext = createContext(initialStateIndexGroup);\nexport const dispatchIndexGroupContext = createContext((action) => { });\nconst App = () => {\n    const [indexGroupState, indexGroupDispatch] = useReducer(reducerIndexGroup, initialStateIndexGroup);\n    const currentLanguageIndex = indexGroupState.currentLanguage;\n    const languageData = languageDataAPI;\n    let ModalContainer = '';\n    if (indexGroupState.modals.searchBarModalStatus ||\n        indexGroupState.modals.projectDetailsModalStatus) {\n        document.querySelector('body').style.overflow = 'hidden';\n        ModalContainer =\n            <Modal languageDataModal={languageData[currentLanguageIndex].modal} languageDataProjectData={languageData[currentLanguageIndex].projectsData}/>;\n    }\n    else {\n        document.querySelector('body').style.overflow = 'visible';\n        ModalContainer = '';\n    }\n    return (<stateIndexGroupContext.Provider value={indexGroupState}>\n      <dispatchIndexGroupContext.Provider value={indexGroupDispatch}>\n        <Main languageData={languageData[currentLanguageIndex]}/>\n        {ModalContainer}\n      </dispatchIndexGroupContext.Provider>\n    </stateIndexGroupContext.Provider>);\n};\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}