{"version":3,"sources":["server/sendmessage.php","components/navbar.jsx","components/homepage.jsx","components/modaldesktop.jsx","components/modalmobile.jsx","components/clientsprojectspage.jsx","components/myprojectspage.jsx","components/contactmepage.jsx","index.js"],"names":["module","exports","LanguageBtnGroup","props","languageData","currentLanguage","onChangeLanguage","languageBtnGroup","navbar","id","title","onClick","src","alt","MenuList","onChangePage","currentPageStyle","homePageBtn","clientsProjectsPageBtn","myProjectsPageBtn","contactMePageBtn","menuList","className","listItem","Navbar","Slider","state","sliderBtnGroup","active","sliderImages","image","legend","sliderCurrentImgData","sliderCurrentImgIndex","sliderInterval","loadCurrentImageSlider","imageTransition","handleSliderButton","buttonId","setState","e","target","complete","changeSliderImage","sliderBtnGroupNew","map","button","this","setInterval","imgIndex","prevProps","prevState","clearInterval","imageTransitionClass","sliderButtonClass","key","onLoad","onTransitionEnd","React","Component","AboutMe","aboutMe","homepage","text","MyTools","myTools","tool","MyGitHub","myGitHub","href","rel","githubRepositoryImageAlt","repositoryTitle","totalRepository","ContactMeButton","contactMeButton","contactMeFooterButton","type","buttonText","HomePage","ModalDesktop","handleChangeCurrentImage","imageId","modalDesktopKeyImagesLoad","modalDesktopCurrentImageId","indexOf","modalDesktopImageTransition","modalDesktopLoadCurrentImage","keyimg","dataset","push","parseInt","modalDesktopChangeImage","modalDesktopImages","modalDesktopCurrentImage","modalImages","modalBtnClose","modalDesktopImageTransitionClass","onCloseModal","imageData","classImageData","data-keyimg","ModalMobile","modalMobileImages","modalMobileCurrentImage","modalMobileCurrentImageIndex","modalMobileLoadCurrentImage","modalMobileImageTransition","modalMobileBtnClicked","handleButtonLeft","currentImageIndexNew","handleButtonRight","modalMobileChangeImage","modalBtnLeftLimit","modalBtnRightLimit","modalMobileImageTransitionClass","ClientsProjects","handleShowDescription","projectId","clientsProjects","project","descriptionStatusNew","descriptionStatus","name","site","sourceCode","description","handleHideDescription","clientsprojectspage","prevProp","clientsProjectsPage","onOpenModal","clientsProjectButton","clientsProjectsDescription","buttonOpenDescriptionText","Fragment","buttonCloseDescriptionText","ClientsProjectsPage","modalStatus","modalDesktopActive","modalMobileActive","resizeWindowSetState","window","innerWidth","handleOpenModal","handleCloseModal","elementId","changeModalByWidth","removeEventListener","addEventListener","clientsProjectsPageTitle","MyProjects","myProjects","myprojectspage","myProjectPage","myProjectButton","myProjectsDescription","MyProjectsFCC","myProjectsFCC","myProjectsFCCDescription","buttonSourceCode","MyProjectsPage","myProjectsPageTitle","myProjectsFCCPageTitle","SocialMedia","socialMediaTitle","contactmepage","SendMessage","contactMeName","contactMeEmail","contactMeSubject","contactMeMessage","contactMeNameError","contactMeEmailError","contactMeSubjectError","contactMeMessageError","contactMeMessageSuccess","contactMeSendMessageError","contactMeLoadingSendMessage","handleInput","value","handleSubmit","inputRegex","test","formData","FormData","append","axios","post","sendMessage","then","response","data","Error","setTimeout","catch","error","console","preventDefault","contactMeNameBorderError","contactMeEmailBorderError","contactMeSubjectBorderError","contactMeMessageBorderError","hideSuccessMessage","hideSendMessageError","contactMeLoadingSendMessageClass","htmlFor","inputGroup","inputName","labelText","maxLength","placeholder","inputPlaceholder","onChange","autoComplete","inputMsgError","inputEmail","inputSubject","textareaMessage","textareaPlaceholder","textareaMsgError","sendButtonText","successMessage","sendMessageError","ContactMePage","Main","currentPage","handleLanguage","language","handleChangePage","get","startLanguage","country","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e1873d26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sendmessage.bf6dc7fd.php\";","import React from 'react';\r\n\r\nconst LanguageBtnGroup = (props) => {\r\n  const {languageData, currentLanguage, onChangeLanguage} = props;\r\n  const languageBtnGroup = languageData[currentLanguage].navbar.languageBtnGroup;\r\n\r\n  return (\r\n    <ul id=\"language-btngroup\">\r\n      <li title={languageBtnGroup[0].title} onClick={() => onChangeLanguage('ptbr')}>\r\n        <img src=\"/images/br-flag.png\" alt={languageBtnGroup[0].alt}/>\r\n      </li>\r\n      <li title={languageBtnGroup[1].title} onClick={() => onChangeLanguage('en')}>\r\n        <img src=\"/images/us-flag.png\" alt={languageBtnGroup[0].alt}/>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n  \r\nconst MenuList = (props) => {\r\n  const {languageData, currentLanguage, onChangePage, currentPageStyle} = props;\r\n  const homePageBtn = currentPageStyle === 'homepage' ? 'navbar-btn-active' : '';\r\n  const clientsProjectsPageBtn = currentPageStyle === 'clientsprojectspage' ? 'navbar-btn-active' : '';\r\n  const myProjectsPageBtn = currentPageStyle === 'myprojectspage' ? 'navbar-btn-active' : '';\r\n  const contactMePageBtn = currentPageStyle === 'contactmepage' ? 'navbar-btn-active' : '';\r\n  const menuList = languageData[currentLanguage].navbar.menuList;\r\n\r\n  return (\r\n    <ul id=\"menu-list\">\r\n      <li id=\"home-btn\" className={homePageBtn} onClick={() => onChangePage('homepage')}>\r\n        <i className=\"fas fa-home\"></i>\r\n        <span>{menuList[0].listItem}</span>\r\n      </li>\r\n      <li id=\"clients-projects-btn\" className={clientsProjectsPageBtn} onClick={() => onChangePage('clientsprojectspage')}>\r\n        <i className=\"fas fa-users\"></i>\r\n        <span>{menuList[1].listItem}</span>\r\n      </li>\r\n      <li id=\"my-projects-btn\" className={myProjectsPageBtn} onClick={() => onChangePage('myprojectspage')}>\r\n        <i className=\"fas fa-project-diagram\"></i>\r\n        <span>{menuList[2].listItem}</span>\r\n      </li>\r\n      <li id=\"contact-me-btn\" className={contactMePageBtn} onClick={() => onChangePage('contactmepage')}>\r\n        <i className=\"fas fa-comment\"></i>\r\n        <span>{menuList[3].listItem}</span>\r\n      </li>\r\n    </ul>\r\n  );  \r\n}\r\n  \r\nconst Navbar = (props) => {\r\n  const {languageData, currentLanguage, onChangePage, onChangeLanguage, currentPageStyle} = props;\r\n\r\n  return (\r\n    <nav id=\"main-navbar\">\r\n      <div id=\"logo-body-portfolio\">\r\n        <img src=\"images/sk-logo.png\" alt=\"Logo SatuctKode\" id=\"logo-img-portfolio\"/>\r\n      </div>\r\n      <div id=\"menu-navbar\">\r\n        <LanguageBtnGroup currentLanguage={currentLanguage} languageData={languageData}\r\n          onChangeLanguage={onChangeLanguage}/>\r\n        <MenuList currentLanguage={currentLanguage} languageData={languageData}\r\n          onChangePage={onChangePage} currentPageStyle={currentPageStyle}/>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nclass Slider extends React.Component {\r\n  state = {\r\n    sliderBtnGroup: [\r\n      {id: 0, active: true},\r\n      {id: 1, active: false},\r\n      {id: 2, active: false},\r\n      {id: 3, active: false},\r\n      {id: 4, active: false}\r\n    ],\r\n    sliderImages: [\r\n      {image: '/images/slider/slider-1.png', legend: 'Metrix One'},\r\n      {image: '/images/slider/slider-2.png', legend: 'OW Info Project'},\r\n      {image: '/images/slider/slider-3.png', legend: 'SatuctGames Shop'},\r\n      {image: '/images/slider/slider-4.png', legend: 'SatuctGames Shop'},\r\n      {image: '/images/slider/slider-5.png', legend: 'JSA Project'}\r\n    ],\r\n    sliderCurrentImgData: ['/images/slider/slider-1.png', 'Metrix One'],\r\n    sliderCurrentImgIndex: 0,\r\n    sliderInterval: '',\r\n    loadCurrentImageSlider: false,\r\n    imageTransition: false\r\n  }\r\n\r\n  sliderInterval() {\r\n    const {sliderCurrentImgIndex} = this.state;\r\n\r\n    const sliderInterval = setInterval(() => {\r\n      let imgIndex = sliderCurrentImgIndex;\r\n      imgIndex = imgIndex < 4 ? imgIndex + 1 : 0;\r\n      this.setState({\r\n        sliderCurrentImgIndex: imgIndex,\r\n        imageTransition: true,\r\n      });\r\n    }, 3000);\r\n\r\n    this.setState({sliderInterval});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {loadCurrentImageSlider, sliderInterval} = this.state;\r\n\r\n    if(prevState.loadCurrentImageSlider !== loadCurrentImageSlider) {\r\n      if(loadCurrentImageSlider) {\r\n        this.sliderInterval();\r\n      } else {\r\n        this.setState({sliderInterval: clearInterval(sliderInterval)});\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({sliderInterval: clearInterval(this.state.sliderInterval)});\r\n  }\r\n  \r\n  handleSliderButton = buttonId => {\r\n    const {sliderBtnGroup} = this.state;\r\n\r\n    //if(sliderCurrentImgIndex !== buttonId) {\r\n    if(!sliderBtnGroup[buttonId].active) {\r\n      this.setState({\r\n        imageTransition: true,\r\n        sliderCurrentImgIndex: buttonId\r\n      });\r\n    }\r\n  }\r\n\r\n  loadCurrentImageSlider = (e) => {\r\n    if(e.target.complete) {\r\n      this.setState({loadCurrentImageSlider: true});\r\n    }\r\n  }\r\n\r\n  changeSliderImage = () => {\r\n    const {sliderCurrentImgIndex, sliderBtnGroup, loadCurrentImageSlider, sliderImages} = this.state;\r\n\r\n    let buttonId = sliderCurrentImgIndex;\r\n    if(!sliderBtnGroup[buttonId].active && loadCurrentImageSlider) {\r\n      const sliderBtnGroupNew = sliderBtnGroup.map(button => \r\n        button.id === buttonId ? {id: button.id, active: true} : {id: button.id, active: false});\r\n      this.setState({\r\n        sliderBtnGroup: sliderBtnGroupNew,\r\n        sliderCurrentImgData: [sliderImages[buttonId].image, sliderImages[buttonId].legend],\r\n        sliderCurrentImgIndex: buttonId,\r\n        loadCurrentImageSlider: false,\r\n        imageTransition: false\r\n      });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let imageTransitionClass = this.state.imageTransition ? \"transparent-transition-image\" : \"normal-transition-image\";\r\n\r\n    return (\r\n    <section id=\"slider-body\">\r\n      <ul id=\"slider-btngroup\">\r\n        {this.state.sliderBtnGroup.map(button => {\r\n          let sliderButtonClass = 'slider-btngroup-children';\r\n          sliderButtonClass += button.active ? ' slider-image-active' : '';\r\n          return <li key={button.id} className={sliderButtonClass} onClick={() => this.handleSliderButton(button.id)}></li>\r\n        })}\r\n      </ul>\r\n      <img src={this.state.sliderCurrentImgData[0]} alt={this.state.sliderCurrentImgData[1]} id=\"slider-images\" onLoad={this.loadCurrentImageSlider} className={imageTransitionClass} onTransitionEnd={this.changeSliderImage}/>\r\n      <p className=\"slider-legend\">{this.state.sliderCurrentImgData[1]}</p>\r\n    </section>\r\n    );\r\n  };\r\n}\r\n\r\nconst AboutMe = (props) => {\r\n  const {languageData, currentLanguage} = props;\r\n  const aboutMe = languageData[currentLanguage].homepage.aboutMe;\r\n\r\n  return (\r\n    <section id=\"about-me\">\r\n      <div id=\"about-me-title\">\r\n        <i className=\"fas fa-scroll\"></i>\r\n        <h2>{aboutMe.title}</h2>\r\n      </div>\r\n      <div id=\"about-me-text\">\r\n        <p>{aboutMe.text}</p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst MyTools = (props) => {\r\n  const {languageData, currentLanguage} = props;\r\n  const myTools = languageData[currentLanguage].homepage.myTools;\r\n\r\n  const toolsImages = [\r\n    {id: 0, image: '/images/myTools/html5.png', alt: 'HTML5'},\r\n    {id: 1, image: '/images/myTools/css3.png', alt: 'CSS3'},\r\n    {id: 2, image: '/images/myTools/js.png', alt: 'Javascript'},\r\n    {id: 3, image: '/images/myTools/sass.png', alt: 'Sass'},\r\n    {id: 4, image: '/images/myTools/react.png', alt: 'React'},\r\n    {id: 5, image: '/images/myTools/vuejs.png', alt: 'VueJS'},\r\n    {id: 6, image: '/images/myTools/bootstrap.png', alt: 'Bootstrap'},\r\n    {id: 7, image: '/images/myTools/wordpress.png', alt: 'Wordpress'},\r\n    {id: 8, image: '/images/myTools/php.png', alt: 'PHP'},\r\n    {id: 9, image: '/images/myTools/mysql.png', alt: 'MySQL'},\r\n    {id: 10, image: '/images/myTools/docker.png', alt: 'Docker'}\r\n  ]\r\n\r\n  return (\r\n    <section id=\"my-tools\">\r\n      <div id=\"my-tools-title\">\r\n        <i className=\"fas fa-tools\"></i>\r\n        <h2>{myTools.title}</h2>\r\n      </div>\r\n      <div id=\"tools-body\">\r\n        {toolsImages.map(tool => \r\n          <div className=\"tools-children\" key={tool.id}>\r\n            <img src={tool.image} alt={tool.alt} title={tool.alt}/>\r\n          </div>          \r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst MyGitHub = (props) => {\r\n  const {languageData, currentLanguage} = props;\r\n  const myGitHub = languageData[currentLanguage].homepage.myGitHub;\r\n\r\n  return (\r\n    <section id=\"my-github\">\r\n      <div id=\"my-github-title\">\r\n        <i className=\"fab fa-github\"></i>\r\n        <h2>{myGitHub.title}</h2>\r\n      </div>\r\n      <div id=\"github-repository-body\">\r\n        <a href=\"https://github.com/satuctkode?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\" id=\"github-repository-inner\">\r\n          <div id=\"github-repository-image\">\r\n            <img src='/images/imgprofilegithub.jpeg' alt={myGitHub.githubRepositoryImageAlt}/>\r\n          </div>\r\n          <div id=\"github-repository-data\">\r\n            <p id=\"repository-title\">{myGitHub.repositoryTitle}</p>\r\n            <p id=\"total-repository\">{myGitHub.totalRepository}</p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst ContactMeButton = (props) => {\r\n  const {languageData, currentLanguage} = props;\r\n  const contactMeButton = languageData[currentLanguage].homepage.contactMeFooterButton;\r\n\r\n  return (\r\n    <section id=\"contact-me-footer-button-body\">\r\n      <div id=\"contact-me-footer-button\">\r\n        <button type=\"button\" onClick={() => props.onChangePage('contactmepage')}>\r\n          <i className=\"fas fa-comment\"></i>\r\n          {contactMeButton.buttonText}\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n  \r\nconst HomePage = (props) => {\r\n  const {languageData, currentLanguage, onChangePage} = props;\r\n  \r\n  return (\r\n    <article id=\"homepage-body\">\r\n      <Slider/>\r\n      <AboutMe currentLanguage={currentLanguage} languageData={languageData}/>\r\n      <MyTools currentLanguage={currentLanguage} languageData={languageData}/>\r\n      <MyGitHub currentLanguage={currentLanguage} languageData={languageData}/>\r\n      <ContactMeButton currentLanguage={currentLanguage} languageData={languageData}\r\n        onChangePage={onChangePage}/>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nclass ModalDesktop extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modalDesktopImages: [],\r\n      modalDesktopCurrentImage: [],\r\n      modalDesktopKeyImagesLoad: [],\r\n      modalDesktopImageTransition: false,\r\n      modalDesktopCurrentImageId: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {modalImages} = this.props;\r\n    this.setState({ \r\n      modalDesktopImages: modalImages,\r\n      modalDesktopCurrentImage: [modalImages[0].id, modalImages[0].image, modalImages[0].alt]\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({modalDesktopKeyImagesLoad: []});\r\n  }\r\n\r\n  handleChangeCurrentImage = (imageId) => {\r\n    const {modalDesktopKeyImagesLoad, modalDesktopCurrentImageId} = this.state;\r\n\r\n    if(modalDesktopKeyImagesLoad.indexOf(imageId) !== -1 && modalDesktopCurrentImageId !== imageId) {\r\n      this.setState({\r\n        modalDesktopImageTransition: true,\r\n        modalDesktopCurrentImageId: imageId\r\n      });\r\n    }\r\n  }\r\n\r\n  modalDesktopLoadCurrentImage = (e) => {\r\n    let keyimg = e.target.dataset.keyimg;\r\n    let modalDesktopKeyImagesLoad = this.state.modalDesktopKeyImagesLoad;\r\n\r\n    if(e.target.complete) {\r\n      if(this.state.modalDesktopKeyImagesLoad.indexOf(keyimg) === -1) {\r\n        modalDesktopKeyImagesLoad.push(parseInt(keyimg));\r\n        this.setState({modalDesktopKeyImagesLoad});\r\n      }\r\n    }\r\n  }\r\n\r\n  modalDesktopChangeImage = () => {\r\n    const {modalDesktopImages, modalDesktopCurrentImageId} = this.state;\r\n    let imageId = modalDesktopCurrentImageId;\r\n\r\n    this.setState({\r\n      modalDesktopCurrentImage: [modalDesktopImages[imageId].id, modalDesktopImages[imageId].image, modalDesktopImages[imageId].alt],\r\n      modalDesktopImageTransition: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {modalDesktopImages, modalDesktopCurrentImage} = this.state;\r\n    const {languageData, currentLanguage} = this.props;\r\n    const modalBtnClose = languageData[currentLanguage].modalBtnClose;\r\n    let modalDesktopImageTransitionClass = this.state.modalDesktopImageTransition ? \"transparent-transition-image\" : \"normal-transition-image\";\r\n\r\n    return (\r\n      <div id=\"modal-desktop-background\" onClick={this.props.onCloseModal}>\r\n        <div id=\"modal-desktop-foreground\">\r\n          <div id=\"modal-desktop-current-image\">\r\n            <img src={modalDesktopCurrentImage[1]} alt={modalDesktopCurrentImage[2]} className={modalDesktopImageTransitionClass}\r\n              onTransitionEnd={this.modalDesktopChangeImage}/>\r\n          </div>\r\n          <div id=\"modal-desktop-aside-menu-body\">\r\n            <div id=\"modal-desktop-close-button\">\r\n              <button type=\"button\" id=\"modal-desktop-close-button-child\" onClick={this.props.onCloseModal}>\r\n                <i className=\"fas fa-times-circle\" id=\"modal-desktop-close-button-child-icon\"></i>\r\n                {modalBtnClose}\r\n              </button>\r\n            </div>\r\n            <div id=\"modal-desktop-image-btngroup\">\r\n              {modalDesktopImages.map(imageData => {\r\n                let classImageData = 'modal-desktop-image-button-children';\r\n                classImageData += modalDesktopCurrentImage[0] === imageData.id ? \" modal-desktop-image-active\" : '';\r\n\r\n                return <div className={classImageData} key={imageData.id} onClick={() => this.handleChangeCurrentImage(imageData.id)}>\r\n                  <img src={imageData.image} alt={imageData.alt} onLoad={this.modalDesktopLoadCurrentImage} data-keyimg={imageData.id}/>\r\n                </div> \r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalDesktop;","import React from 'react';\r\n\r\nclass ModalMobile extends React.Component {\r\n  state = {\r\n    modalMobileImages: [],\r\n    modalMobileCurrentImage: [],\r\n    modalMobileCurrentImageIndex: 0,\r\n    modalMobileLoadCurrentImage: false,\r\n    modalMobileImageTransition: false,\r\n    modalMobileBtnClicked: \"btnLeft\"\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {modalImages} = this.props;\r\n    this.setState({ \r\n      modalMobileImages: modalImages,\r\n      modalMobileCurrentImage: [modalImages[0].id, modalImages[0].image, modalImages[0].alt],\r\n      modalMobileCurrentImageIndex: modalImages[0].id\r\n    });\r\n  }\r\n\r\n  handleButtonLeft = () => {\r\n    const {modalMobileCurrentImageIndex} = this.state;    \r\n\r\n    if(modalMobileCurrentImageIndex > 0) {\r\n      const currentImageIndexNew = modalMobileCurrentImageIndex > 0 ? modalMobileCurrentImageIndex - 1 : 0;\r\n\r\n      this.setState({\r\n        modalMobileImageTransition: true,\r\n        modalMobileCurrentImageIndex: currentImageIndexNew,\r\n        modalMobileLoadCurrentImage: currentImageIndexNew === 0 ? true : false,\r\n        modalMobileBtnClicked: \"btnLeft\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleButtonRight = () => {\r\n    const {modalMobileCurrentImageIndex, modalMobileLoadCurrentImage} = this.state;\r\n\r\n    if(modalMobileCurrentImageIndex < 3) {\r\n      const currentImageIndexNew = modalMobileCurrentImageIndex < 3 ? modalMobileCurrentImageIndex + 1 : 3;\r\n\r\n      if(modalMobileLoadCurrentImage) {\r\n        this.setState({\r\n          modalMobileImageTransition: true,\r\n          modalMobileCurrentImageIndex: currentImageIndexNew,\r\n          modalMobileLoadCurrentImage: currentImageIndexNew === 3 ? true : false,\r\n          modalMobileBtnClicked: \"btnRight\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  modalMobileLoadCurrentImage = (e) => {\r\n    if(e.target.complete) {\r\n      this.setState({modalMobileLoadCurrentImage: true});\r\n    }\r\n  }\r\n\r\n  modalMobileChangeImage = () => {\r\n    const {modalMobileImages, modalMobileCurrentImageIndex, modalMobileBtnClicked} = this.state;\r\n    const currentImageIndexNew = modalMobileCurrentImageIndex;\r\n\r\n    if(modalMobileBtnClicked === \"btnRight\") {\r\n      this.setState({\r\n        modalMobileCurrentImage: [modalMobileImages[currentImageIndexNew].id, modalMobileImages[currentImageIndexNew].image, modalMobileImages[currentImageIndexNew].alt],\r\n        modalMobileImageTransition: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        modalMobileCurrentImage: [modalMobileImages[currentImageIndexNew].id, modalMobileImages[currentImageIndexNew].image, modalMobileImages[currentImageIndexNew].alt],\r\n        modalMobileImageTransition: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {modalMobileCurrentImage, modalMobileCurrentImageIndex} = this.state;\r\n    const modalBtnLeftLimit = modalMobileCurrentImageIndex === 0 ? 'modal-mobile-btn-limit' : '';\r\n    const modalBtnRightLimit = modalMobileCurrentImageIndex === 3 ? 'modal-mobile-btn-limit' : '';\r\n    const {languageData, currentLanguage} = this.props;\r\n    const modalBtnClose = languageData[currentLanguage].modalBtnClose;\r\n    let modalMobileImageTransitionClass = this.state.modalMobileImageTransition ? \"transparent-transition-image\" : \"normal-transition-image\";\r\n\r\n    return (\r\n      <div id=\"modal-mobile-background\" onClick={this.props.onCloseModal}>\r\n        <div id=\"modal-mobile-foreground\">\r\n          <div id=\"modal-mobile-close-button\">\r\n            <button type=\"button\" id=\"modal-mobile-close-button-child\" onClick={this.props.onCloseModal}>\r\n              <i className=\"fas fa-times-circle\" id=\"modal-mobile-close-button-child-icon\"></i>\r\n              {modalBtnClose}\r\n            </button>\r\n          </div>\r\n          <div id=\"modal-mobile-image-body\">\r\n            <div id=\"modal-mobile-current-image\">\r\n              <img src={modalMobileCurrentImage[1]} alt={modalMobileCurrentImage[2]} onLoad={this.modalMobileLoadCurrentImage}\r\n                onTransitionEnd={this.modalMobileChangeImage} className={modalMobileImageTransitionClass}/>\r\n            </div>\r\n            <div id=\"modal-mobile-btn-left\" className={modalBtnLeftLimit} onClick={this.handleButtonLeft}>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n            </div>\r\n            <div id=\"modal-mobile-btn-right\" className={modalBtnRightLimit} onClick={this.handleButtonRight}>\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalMobile;","import React from 'react';\r\nimport ModalDesktop from './modaldesktop';\r\nimport ModalMobile from './modalmobile';\r\n\r\nclass ClientsProjects extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clientsProjects: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const clientsProjects = languageData[currentLanguage].clientsprojectspage.clientsProjects;\r\n    this.setState({ clientsProjects });\r\n  }\r\n\r\n  componentDidUpdate(prevProp) {\r\n    const {languageData, currentLanguage} = this.props;\r\n    if(prevProp.currentLanguage !== currentLanguage) {\r\n      const clientsProjects = languageData[currentLanguage].clientsprojectspage.clientsProjects;\r\n      this.setState({ clientsProjects });\r\n    }\r\n  }\r\n\r\n  handleShowDescription = (projectId) => {\r\n    const clientsProjects = this.state.clientsProjects.map(project => {\r\n      const descriptionStatusNew = projectId === project.id ? true : project.descriptionStatus;\r\n      const clientsProject = {id: project.id, name: project.name, image: project.image, alt: project.alt, site: project.site, sourceCode: project.sourceCode, description: project.description, descriptionStatus: descriptionStatusNew}\r\n      return clientsProject;\r\n    });\r\n    this.setState({clientsProjects});\r\n  }\r\n\r\n  handleHideDescription = (projectId) => {\r\n    const clientsProjects = this.state.clientsProjects.map(project => {\r\n      const descriptionStatusNew = projectId === project.id ? false : project.descriptionStatus;\r\n      const clientsProject = {id: project.id, name: project.name, image: project.image, alt: project.alt, site: project.site, sourceCode: project.sourceCode, description: project.description, descriptionStatus: descriptionStatusNew}\r\n      return clientsProject;\r\n    });\r\n    this.setState({clientsProjects});\r\n  }\r\n\r\n  render() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const clientsProjectsPage = languageData[currentLanguage].clientsprojectspage;\r\n    const {clientsProjects} = this.state;\r\n\r\n    return (\r\n      <div id=\"clients-projects-body\">\r\n        {clientsProjects.map(project => \r\n          <div className=\"clients-projects\" key={project.id}>\r\n            <h3>{project.name}</h3>\r\n            <div className=\"client-project-data\">\r\n              <div className=\"client-project-image\">\r\n                <img src={project.image} alt={project.alt}/>\r\n              </div>\r\n              <div className=\"client-project-btngroup\">\r\n                <div className=\"client-project-button\">\r\n                  <button type=\"button\" onClick={() => this.props.onOpenModal(project.modalImages)} title={clientsProjectsPage.clientsProjectButton[0].title}>\r\n                    <i className=\"fas fa-images\"></i>\r\n                  </button>\r\n                </div>\r\n                <div className=\"client-project-button\">\r\n                  <a href={project.site} target=\"_blank\" rel=\"noopener noreferrer\" title={clientsProjectsPage.clientsProjectButton[1].title}>\r\n                    <i className=\"fas fa-external-link-alt\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"client-project-description-body\">\r\n                {!project.descriptionStatus && \r\n                  <button type=\"button\" className=\"client-project-description-btn\" onClick={() => this.handleShowDescription(project.id)}>\r\n                    <i className=\"fas fa-arrow-alt-circle-down\"></i>\r\n                    {clientsProjectsPage.clientsProjectsDescription.buttonOpenDescriptionText}\r\n                  </button>\r\n                }\r\n                {project.descriptionStatus &&\r\n                  <React.Fragment>\r\n                    <p className=\"client-project-description\">{project.description}</p>\r\n                    <button type=\"button\" className=\"client-project-description-btn-close\" onClick={() => this.handleHideDescription(project.id)}>\r\n                      <i className=\"fas fa-times-circle\"></i>\r\n                      {clientsProjectsPage.clientsProjectsDescription.buttonCloseDescriptionText}\r\n                    </button>\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ClientsProjectsPage extends React.Component {\r\n  state = {\r\n    modalStatus: false,\r\n    modalImages: [],\r\n    modalDesktopActive: false,\r\n    modalMobileActive: false\r\n  }\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    if(prevState.modalStatus !== this.state.modalStatus) {\r\n      this.changeModalByWidth();\r\n      \r\n      if(!this.state.modalStatus) {\r\n        window.removeEventListener('resize', this.resizeWindowSetState);\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeWindowSetState = () => {\r\n    if(window.innerWidth > 900) {\r\n      this.setState({\r\n        modalMobileActive: false,\r\n        modalDesktopActive: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        modalDesktopActive: false,\r\n        modalMobileActive: true\r\n      });\r\n    }\r\n  }\r\n\r\n  changeModalByWidth() {\r\n    const {modalStatus} = this.state;\r\n\r\n    if(window.innerWidth > 900 && modalStatus) {\r\n      this.setState({modalDesktopActive: true});\r\n    } else {\r\n      this.setState({modalDesktopActive: false});\r\n    }\r\n\r\n    if(window.innerWidth <= 900 && modalStatus) {\r\n      this.setState({modalMobileActive: true});\r\n    } else {\r\n      this.setState({modalMobileActive: false});\r\n    }\r\n\r\n    if(modalStatus) {\r\n      window.addEventListener('resize', this.resizeWindowSetState)\r\n    }\r\n  }\r\n\r\n  handleOpenModal = (modalImages) => {\r\n    this.setState({ \r\n      modalImages,\r\n      modalStatus: !this.state.modalStatus && true\r\n    });\r\n  }\r\n\r\n  handleCloseModal = (e) => {\r\n    const elementId = e.target.id;\r\n    if(elementId === 'modal-desktop-background' || elementId === 'modal-desktop-close-button-child' || elementId === 'modal-desktop-close-button-child-icon' || elementId === 'modal-mobile-background' || elementId === 'modal-mobile-close-button-child' || elementId === 'modal-mobile-close-button-child-icon') {\r\n      this.setState({ modalStatus: !this.state.modalStatus && true })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const clientsProjectsPageTitle = languageData[currentLanguage].clientsprojectspage.clientsProjectsPageTitle;\r\n    const {modalImages, modalDesktopActive, modalMobileActive} = this.state;\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <article id=\"clients-projects-page-body\">\r\n          <section id=\"clients-projects-page\">\r\n            <div id=\"clients-projects-page-title\">\r\n              <i className=\"fas fa-users\"></i>\r\n              <h2>{clientsProjectsPageTitle}</h2>\r\n            </div>\r\n            <ClientsProjects currentLanguage={currentLanguage} languageData={languageData}\r\n              onOpenModal={this.handleOpenModal}/>\r\n          </section>\r\n        </article>\r\n        {modalDesktopActive && <ModalDesktop currentLanguage={currentLanguage} languageData={languageData} modalImages={modalImages} onCloseModal={this.handleCloseModal}/>}\r\n        {modalMobileActive && <ModalMobile currentLanguage={currentLanguage} languageData={languageData} modalImages={modalImages} onCloseModal={this.handleCloseModal}/>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientsProjectsPage;","import React from 'react';\r\nimport ModalDesktop from './modaldesktop';\r\nimport ModalMobile from './modalmobile';\r\n\r\nclass MyProjects extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myProjects: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const myProjects = languageData[currentLanguage].myprojectspage.myProjects;\r\n    this.setState({ myProjects });\r\n  }\r\n\r\n  componentDidUpdate(prevProp) {\r\n    const {languageData, currentLanguage} = this.props;\r\n    if(prevProp.currentLanguage !== currentLanguage) {\r\n      const myProjects = languageData[currentLanguage].myprojectspage.myProjects;\r\n      this.setState({ myProjects });\r\n    }\r\n  }\r\n\r\n  handleShowDescription = (projectId) => {\r\n    const myProjects = this.state.myProjects.map(project => {\r\n      const descriptionStatusNew = projectId === project.id ? true : project.descriptionStatus;\r\n      const myProject = {id: project.id, name: project.name, image: project.image, alt: project.alt, site: project.site, sourceCode: project.sourceCode, description: project.description, descriptionStatus: descriptionStatusNew}\r\n      return myProject;\r\n    });\r\n    this.setState({myProjects});\r\n  }\r\n\r\n  handleHideDescription = (projectId) => {\r\n    const myProjects = this.state.myProjects.map(project => {\r\n      const descriptionStatusNew = projectId === project.id ? false : project.descriptionStatus;\r\n      const myProject = {id: project.id, name: project.name, image: project.image, alt: project.alt, site: project.site, sourceCode: project.sourceCode, description: project.description, descriptionStatus: descriptionStatusNew}\r\n      return myProject;\r\n    });\r\n    this.setState({myProjects});\r\n  }\r\n\r\n  render() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const myProjectPage = languageData[currentLanguage].myprojectspage;\r\n    const {myProjects} = this.state;\r\n\r\n    return (\r\n      <div id=\"my-projects-body\">\r\n        {myProjects.map(project =>\r\n          <div className=\"my-projects\" key={project.id}>\r\n            <h3>{project.name}</h3>\r\n            <div className=\"my-project-data\">\r\n              <div className=\"my-project-image\">\r\n                <img src={project.image} alt={project.alt}/>\r\n              </div>\r\n              <div className=\"my-project-btngroup\">\r\n                <div className=\"my-project-button\">\r\n                  <button type=\"button\" onClick={() => this.props.onOpenModal(project.modalImages)} title={myProjectPage.myProjectButton[0].title}>\r\n                    <i className=\"fas fa-images\"></i>\r\n                  </button>\r\n                </div>\r\n                <div className=\"my-project-button\">\r\n                  <a href={project.site} target=\"_blank\" rel=\"noopener noreferrer\" title={myProjectPage.myProjectButton[1].title}>\r\n                    <i className=\"fas fa-external-link-alt\"></i>\r\n                  </a>\r\n                </div>\r\n                <div className=\"my-project-button\">\r\n                  <a href={project.sourceCode} target=\"_blank\" rel=\"noopener noreferrer\" title={myProjectPage.myProjectButton[2].title}>\r\n                    <i className=\"fas fa-code\"></i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"my-project-description-body\">\r\n                {!project.descriptionStatus && \r\n                  <button type=\"button\" className=\"my-project-description-btn\" onClick={() => this.handleShowDescription(project.id)}>\r\n                    <i className=\"fas fa-arrow-alt-circle-down\"></i>\r\n                    {myProjectPage.myProjectsDescription.buttonOpenDescriptionText}\r\n                  </button>\r\n                }\r\n                {project.descriptionStatus &&\r\n                  <React.Fragment>\r\n                    <p className=\"my-project-description\">{project.description}</p>\r\n                    <button type=\"button\" className=\"my-project-description-btn-close\" onClick={() => this.handleHideDescription(project.id)}>\r\n                      <i className=\"fas fa-times-circle\"></i>\r\n                      {myProjectPage.myProjectsDescription.buttonCloseDescriptionText}\r\n                    </button>\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass MyProjectsFCC extends React.Component {\r\n  state = {\r\n    myProjectsFCC: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const myProjectsFCC = languageData[currentLanguage].myprojectspage.myProjectsFCC;\r\n    this.setState({ myProjectsFCC });\r\n  }\r\n\r\n  render() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const myProjectPage = languageData[currentLanguage].myprojectspage;\r\n    const {myProjectsFCC} = this.state;\r\n\r\n    return(\r\n      <div id=\"my-projects-fcc-body\">\r\n      {myProjectsFCC.map(project => \r\n        <div className=\"my-projects-fcc\" key={project.id}>\r\n          <h3>{project.name}</h3>\r\n          <div className=\"my-project-fcc-data\">\r\n            <div className=\"my-project-fcc-image\">\r\n              <img src={project.image} alt={project.alt}/>\r\n            </div>\r\n            <div className=\"my-project-fcc-codepen-body\">\r\n              <a href={project.sourceCode} target=\"_blank\" rel=\"noopener noreferrer\" className=\"my-project-fcc-codepen-btn\">\r\n                <i className=\"fab fa-codepen\"></i>\r\n                {myProjectPage.myProjectsFCCDescription.buttonSourceCode}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass MyProjectsPage extends React.Component {\r\n  state = {\r\n    modalStatus: false,\r\n    modalImages: [],\r\n    modalDesktopActive: false,\r\n    modalMobileActive: false\r\n  }\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    if(prevState.modalStatus !== this.state.modalStatus) {\r\n      this.changeModalByWidth();\r\n      \r\n      if(!this.state.modalStatus) {\r\n        window.removeEventListener('resize', this.resizeWindowSetState);\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeWindowSetState = () => {\r\n    if(window.innerWidth > 900) {\r\n      this.setState({\r\n        modalMobileActive: false,\r\n        modalDesktopActive: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        modalDesktopActive: false,\r\n        modalMobileActive: true\r\n      });\r\n    }\r\n  }\r\n\r\n  changeModalByWidth() {\r\n    const {modalStatus} = this.state;\r\n\r\n    if(window.innerWidth > 900 && modalStatus) {\r\n      this.setState({modalDesktopActive: true});\r\n    } else {\r\n      this.setState({modalDesktopActive: false});\r\n    }\r\n\r\n    if(window.innerWidth <= 900 && modalStatus) {\r\n      this.setState({modalMobileActive: true});\r\n    } else {\r\n      this.setState({modalMobileActive: false});\r\n    }\r\n\r\n    if(modalStatus) {\r\n      window.addEventListener('resize', this.resizeWindowSetState)\r\n    }\r\n  }\r\n\r\n  handleOpenModal = (modalImages) => {\r\n    this.setState({ \r\n      modalImages,\r\n      modalStatus: !this.state.modalStatus && true\r\n    });\r\n  }\r\n\r\n  handleCloseModal = (e) => {\r\n    const elementId = e.target.id;\r\n    if(elementId === 'modal-desktop-background' || elementId === 'modal-desktop-close-button-child' || elementId === 'modal-desktop-close-button-child-icon' || elementId === 'modal-mobile-background' || elementId === 'modal-mobile-close-button-child' || elementId === 'modal-mobile-close-button-child-icon') {\r\n      this.setState({ modalStatus: !this.state.modalStatus && true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const myProjectPage = languageData[currentLanguage].myprojectspage;\r\n    const {modalImages, modalDesktopActive, modalMobileActive} = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <article id=\"my-projects-page-body\">\r\n          <section id=\"my-projects-page\">\r\n            <div id=\"my-projects-page-title\">\r\n              <i className=\"fas fa-project-diagram\"></i>\r\n              <h2>{myProjectPage.myProjectsPageTitle}</h2>\r\n            </div>\r\n            <MyProjects currentLanguage={currentLanguage} languageData={languageData}\r\n              onOpenModal={this.handleOpenModal}/>\r\n          </section>\r\n          <section id=\"my-projects-fcc-page\">\r\n            <div id=\"my-projects-fcc-page-title\">\r\n              <i className=\"fab fa-free-code-camp\"></i>\r\n              <h2>{myProjectPage.myProjectsFCCPageTitle}</h2>\r\n            </div>\r\n            <MyProjectsFCC currentLanguage={currentLanguage} languageData={languageData}/>\r\n          </section>\r\n        </article>\r\n        {modalDesktopActive && <ModalDesktop currentLanguage={currentLanguage} languageData={languageData} modalImages={modalImages} onCloseModal={this.handleCloseModal}/>}\r\n        {modalMobileActive && <ModalMobile currentLanguage={currentLanguage} languageData={languageData} modalImages={modalImages} onCloseModal={this.handleCloseModal}/>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyProjectsPage;","import React from 'react';\r\nimport axios from 'axios';\r\nimport sendMessage from '../server/sendmessage.php';\r\n\r\nconst SocialMedia = (props) => {\r\n  const {languageData, currentLanguage} = props;\r\n  const socialMediaTitle = languageData[currentLanguage].contactmepage.socialMediaTitle;\r\n\r\n  return (\r\n    <section id=\"contact-me-social-media\">\r\n      <div id=\"contact-me-social-media-title\">\r\n        <i className=\"fas fa-hashtag\"></i>\r\n        <h2>{socialMediaTitle}</h2>\r\n      </div>\r\n      <div id=\"contact-me-social-media-list-body\">\r\n        <ul id=\"contact-me-social-media-list\">\r\n          <li id=\"contact-me-social-media-facebook\">\r\n            <a href=\"https://www.facebook.com/gleydsonjosedasilva\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-facebook-f\"></i>\r\n            </a>\r\n          </li>\r\n          <li id=\"contact-me-social-media-linkedin\">\r\n            <a href=\"https://www.linkedin.com/in/gleydson-jose-8600a2189\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-linkedin-in\"></i>\r\n            </a>\r\n          </li>\r\n          <li id=\"contact-me-social-media-twitter\">\r\n            <a href=\"https://twitter.com/gleydsongst\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </a>\r\n          </li>\r\n          <li id=\"contact-me-social-media-whatsapp\">\r\n            <a href=\"https://api.whatsapp.com/send?1=pt_BR&phone=55081988101515\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-whatsapp\"></i>\r\n            </a>\r\n          </li>\r\n          <li id=\"contact-me-social-media-telegram\">\r\n            <a href=\"https://t.me/GleydsonJose\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-telegram-plane\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nclass SendMessage extends React.Component {\r\n  state = {\r\n    contactMeName: '',\r\n    contactMeEmail: '',\r\n    contactMeSubject: '',\r\n    contactMeMessage: '',\r\n    contactMeNameError: false,\r\n    contactMeEmailError: false,\r\n    contactMeSubjectError: false,\r\n    contactMeMessageError: false,\r\n    contactMeMessageSuccess: false,\r\n    contactMeSendMessageError: false,\r\n    contactMeLoadingSendMessage: false\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const {contactMeName, contactMeEmail, contactMeSubject, contactMeMessage} = this.state;\r\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const inputRegex = /[a-z0-9]{2}/i;\r\n\r\n    this.setState({\r\n      contactMeNameError: !inputRegex.test(contactMeName),\r\n      contactMeEmailError: !emailRegex.test(contactMeEmail),\r\n      contactMeSubjectError: !inputRegex.test(contactMeSubject),\r\n      contactMeMessageError: !inputRegex.test(contactMeMessage)\r\n    }, () => {\r\n      const {contactMeNameError, contactMeEmailError, contactMeSubjectError, contactMeMessageError} = this.state;\r\n\r\n      if(!contactMeNameError && !contactMeEmailError && !contactMeSubjectError && !contactMeMessageError) {\r\n        this.setState({contactMeLoadingSendMessage: true});\r\n\r\n        let formData = new FormData();\r\n        formData.append('contactMeName', contactMeName);\r\n        formData.append('contactMeEmail', contactMeEmail);\r\n        formData.append('contactMeSubject', contactMeSubject);\r\n        formData.append('contactMeMessage', contactMeMessage);\r\n        axios.post(sendMessage, formData\r\n          ).then(response => {\r\n            if(response.data === \"success\") {\r\n              this.setState({\r\n                contactMeMessageSuccess: true,\r\n                contactMeLoadingSendMessage: false\r\n              });\r\n\r\n              setTimeout(() => {\r\n                this.setState({contactMeMessageSuccess: false});\r\n              }, 3000);\r\n  \r\n            } else {\r\n              this.setState({contactMeLoadingSendMessage: false});\r\n              throw new Error(response.data);\r\n            }\r\n          }\r\n          ).catch(error => {\r\n            this.setState({contactMeSendMessageError: true})\r\n\r\n            setTimeout(() => {\r\n              this.setState({contactMeSendMessageError: false});\r\n            }, 3000);\r\n\r\n            console.error(error);\r\n          });\r\n      }\r\n    })\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {languageData, currentLanguage} = this.props;\r\n    const sendMessage = languageData[currentLanguage].contactmepage.sendMessage;\r\n    const {contactMeNameError, contactMeEmailError, contactMeSubjectError, contactMeMessageError, contactMeMessageSuccess,\r\n      contactMeSendMessageError, contactMeLoadingSendMessage} = this.state;\r\n    const contactMeNameBorderError = contactMeNameError ? 'input-error' : '';\r\n    const contactMeEmailBorderError = contactMeEmailError ? 'input-error' : '';\r\n    const contactMeSubjectBorderError = contactMeSubjectError ? 'input-error' : '';\r\n    const contactMeMessageBorderError = contactMeMessageError ? 'input-error' : '';\r\n    const hideSuccessMessage = contactMeMessageSuccess ? 'hide-contact-me-message' : '';\r\n    const hideSendMessageError = contactMeSendMessageError ? 'hide-contact-me-message' : '';\r\n    let contactMeLoadingSendMessageClass = contactMeLoadingSendMessage ? \"show-contact-me-loading-send-message\" : \"\";\r\n\r\n    return (\r\n      <section id=\"contact-me-send-message\">\r\n        <div id=\"contact-me-send-message-title\">\r\n          <i className=\"fas fa-envelope\"></i>\r\n          <h2>{sendMessage.title}</h2>\r\n        </div>\r\n        <div id=\"contact-me-send-message-body\">\r\n          <form id=\"contact-me-send-message-form\">\r\n            <div className=\"contact-me-send-message-input-group\">\r\n              <label htmlFor=\"contact-me-name\">\r\n                <i className=\"fas fa-user\"></i>\r\n                {sendMessage.inputGroup.inputName.labelText}\r\n              </label>\r\n              <input type=\"text\" id=\"contact-me-name\" name=\"contactMeName\" maxLength=\"60\" className={contactMeNameBorderError} placeholder={sendMessage.inputGroup.inputName.inputPlaceholder} value={this.state.contactMeName} onChange={this.handleInput} autoComplete=\"off\"/>\r\n              {contactMeNameError && <p className=\"input-msg-error\">{sendMessage.inputGroup.inputName.inputMsgError}</p>}\r\n            </div>\r\n            <div className=\"contact-me-send-message-input-group\">\r\n              <label htmlFor=\"contact-me-email\">\r\n                <i className=\"fas fa-at\"></i>\r\n                {sendMessage.inputGroup.inputEmail.labelText}\r\n              </label>\r\n              <input type=\"email\" id=\"contact-me-email\" name=\"contactMeEmail\" maxLength=\"80\" className={contactMeEmailBorderError} placeholder={sendMessage.inputGroup.inputEmail.inputPlaceholder} value={this.state.contactMeEmail} onChange={this.handleInput} autoComplete=\"off\"/>\r\n              {contactMeEmailError && <p className=\"input-msg-error\">{sendMessage.inputGroup.inputEmail.inputMsgError}</p>}\r\n            </div>\r\n            <div className=\"contact-me-send-message-input-group\">\r\n              <label htmlFor=\"contact-me-subject\">\r\n                <i className=\"fas fa-pen-alt\"></i>\r\n                {sendMessage.inputGroup.inputSubject.labelText}\r\n              </label>\r\n              <input type=\"text\" id=\"contact-me-subject\" name=\"contactMeSubject\" maxLength=\"70\" className={contactMeSubjectBorderError} placeholder={sendMessage.inputGroup.inputSubject.inputPlaceholder} value={this.state.contactMeSubject} onChange={this.handleInput} autoComplete=\"off\"/>\r\n              {contactMeSubjectError && <p className=\"input-msg-error\">{sendMessage.inputGroup.inputSubject.inputMsgError}</p>}\r\n            </div>\r\n            <div className=\"contact-me-send-message-input-group\">\r\n              <label htmlFor=\"contact-me-message\">\r\n                <i className=\"fas fa-comment\"></i>\r\n                {sendMessage.inputGroup.textareaMessage.labelText}\r\n              </label>\r\n              <textarea id=\"contact-me-message\" name=\"contactMeMessage\" maxLength=\"500\" className={contactMeMessageBorderError} placeholder={sendMessage.inputGroup.textareaMessage.textareaPlaceholder} value={this.state.contactMeMessage} onChange={this.handleInput} autoComplete=\"off\"></textarea>\r\n              {contactMeMessageError && <p className=\"input-msg-error\">{sendMessage.inputGroup.textareaMessage.textareaMsgError}</p>}\r\n            </div>\r\n            <div id=\"contact-me-send-message-button\">\r\n              <button type=\"submit\" onClick={this.handleSubmit}>\r\n                <i className=\"far fa-envelope\"></i>\r\n                {sendMessage.sendButtonText}\r\n              </button>\r\n            </div>\r\n            <div id=\"contact-me-loading-send-message\" className={contactMeLoadingSendMessageClass}>\r\n              <img src=\"/images/ajax-loader.gif\" alt=\"Loading gif\"/>\r\n            </div>\r\n            {contactMeMessageSuccess && <div id=\"contact-me-success-message\" className={hideSuccessMessage}>\r\n              <p>{sendMessage.successMessage}</p>\r\n            </div>}\r\n            {contactMeSendMessageError && <div id=\"contact-me-send-message-error\" className={hideSendMessageError}>\r\n              <p>{sendMessage.sendMessageError}</p>\r\n            </div>}\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst ContactMePage = (props) => {\r\n  const {languageData, currentLanguage} = props;\r\n\r\n  return (\r\n    <article id=\"contact-me-page-body\">\r\n      <SocialMedia currentLanguage={currentLanguage} languageData={languageData}/>\r\n      <SendMessage currentLanguage={currentLanguage} languageData={languageData}/>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ContactMePage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/main.css';\nimport Navbar from './components/navbar';\nimport HomePage from './components/homepage';\nimport ClientsProjectsPage from './components/clientsprojectspage';\nimport MyProjectsPage from './components/myprojectspage';\nimport ContactMePage from './components/contactmepage';\nimport languageData from './json/languageData.json';\nimport axios from 'axios';\n\nclass Main extends React.Component {\n  state = {\n    currentPage: 'homepage',\n    currentLanguage: 'en'\n  }\n\n  componentDidMount() {\n    axios.get(\"https://ipinfo.io\").then((response) => {\n      this.startLanguage(response.data.country);\n    }).catch((error) => {\n      this.startLanguage(\"US\");\n      console.error(`${error} Error trying to find location`);\n    })\n  }\n\n  startLanguage(language) {\n    let currentLanguage;\n    if(language === \"BR\") {\n      currentLanguage = \"ptbr\";\n    } else {\n      currentLanguage = \"en\";\n    }\n    this.setState({currentLanguage})\n  }\n\n  handleLanguage = (language) => {\n    this.setState({ currentLanguage: language})\n  }\n\n  handleChangePage = (currentPage) => {\n    this.setState({currentPage});\n  }\n\n  render() {\n    const {currentPage, currentLanguage} = this.state;\n\n    return (\n      <main id=\"main-body\">\n        <Navbar currentLanguage={currentLanguage} languageData={languageData}\n          onChangeLanguage={this.handleLanguage} onChangePage={this.handleChangePage}\n          currentPageStyle={currentPage}/>\n        {currentPage === 'homepage' && <HomePage currentLanguage={currentLanguage}\n          languageData={languageData} onChangePage={this.handleChangePage}/>}\n        {currentPage === 'clientsprojectspage' && <ClientsProjectsPage currentLanguage={currentLanguage}\n          languageData={languageData}/>}\n        {currentPage === 'myprojectspage' && <MyProjectsPage currentLanguage={currentLanguage}\n          languageData={languageData}/>}\n        {currentPage === 'contactmepage' && <ContactMePage currentLanguage={currentLanguage}\n          languageData={languageData}/>}\n      </main>\n    );\n  }\n}\n\nReactDOM.render(<Main />, document.querySelector('#root'));"],"sourceRoot":""}